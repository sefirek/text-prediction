/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Workers.js":
/*!************************!*\
  !*** ./src/Workers.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Actions\": function() { return /* binding */ Actions; },\n/* harmony export */   \"Statuses\": function() { return /* binding */ Statuses; },\n/* harmony export */   \"getActionName\": function() { return /* binding */ getActionName; }\n/* harmony export */ });\nfunction Workers() {\r\n  this.workers = [];\r\n\r\n  this.getNextId = () => {\r\n    return (\r\n      this.workers.reduce((max, worker) => {\r\n        return Math.max(max, worker.id);\r\n      }, -1) + 1\r\n    );\r\n  };\r\n\r\n  this.createWorker = (workerId, isHidden = false) => {\r\n    if (this.workers[workerId]) return false;\r\n    const worker = new Worker('worker.bundle.js');\r\n    const workerState = {\r\n      id: workerId,\r\n      actions: [],\r\n      worker,\r\n      callbacks: {},\r\n      requestId: 0,\r\n      state: 'stop',\r\n      isInit: false,\r\n      testResult: [],\r\n      isHidden,\r\n      trainingProgress: '',\r\n    };\r\n    this.workers.push(workerState);\r\n    worker.onmessage = ({ data }) => {\r\n      const { action, requestId, value } = data;\r\n      const { callbacks } = workerState;\r\n      if (callbacks[requestId]) {\r\n        if (value.status === Statuses.OK) {\r\n          callbacks[requestId].resolve(data);\r\n        } else {\r\n          callbacks[requestId].reject(data);\r\n        }\r\n\r\n        delete callbacks[requestId];\r\n        return;\r\n      }\r\n      switch (action) {\r\n        case Actions.TRAINING_PROGRESS: {\r\n          workerState.trainingProgress = value;\r\n          break;\r\n        }\r\n        case Actions.LOG: {\r\n        }\r\n        default: {\r\n          workerState.actions.push(data);\r\n        }\r\n      }\r\n    };\r\n    this.initializeWorker(workerId)\r\n      .then((data) => console.log('worker', workerId, 'initialized'))\r\n      .catch((data) => console.log('worker', workerId, 'error', data));\r\n    return true;\r\n  };\r\n  this.getWorker = (workerId) => {\r\n    return this.workers.find(({ id }) => id === workerId);\r\n  };\r\n  this.run = (workerId) => {\r\n    const worker = this.getWorker(workerId);\r\n    if (worker.state === 'stop') {\r\n      worker.state = 'start';\r\n      return this.sendRequest(workerId, {\r\n        action: Actions.RUN,\r\n        value: {},\r\n      }).then((data) => {\r\n        if (data.value.status === Statuses.OK) {\r\n          worker.state = 'stop';\r\n          return data;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  this.test = (workerId) => {\r\n    return this.sendRequest(workerId, {\r\n      action: Actions.TEST,\r\n      value: {},\r\n    }).then((data) => {\r\n      this.getWorker(workerId).testResult = data.value.testResult;\r\n      return data.value.testResult;\r\n    });\r\n  };\r\n  this.initializeWorker = (workerId) => {\r\n    const worker = this.getWorker(workerId);\r\n    if (worker.isInit === false) {\r\n      worker.isInit = true;\r\n      return this.sendRequest(workerId, {\r\n        action: Actions.INITIALIZE,\r\n        value: { host: window.location.origin },\r\n      });\r\n    }\r\n    return Promise.resolve({\r\n      action: Actions.INITIALIZE,\r\n      value: { status: Statuses.OK },\r\n    });\r\n  };\r\n  this.createLstmDataSet = (workerId, { marketData } = {}) => {\r\n    console.log(marketData);\r\n    return this.sendRequest(workerId, {\r\n      action: Actions.CREATE_LSTM_DATA_SET,\r\n      value: { marketData },\r\n    });\r\n  };\r\n  this.getLogs = (workerId) => {\r\n    const logs = [...(this.getWorker(workerId)?.actions || [])];\r\n    return logs;\r\n  };\r\n  this.getTrainingProgress = (workerId) => {\r\n    return this.getWorker(workerId)?.trainingProgress;\r\n  };\r\n  this.sendRequest = (workerId, { action, value }) => {\r\n    const worker = this.getWorker(workerId);\r\n    return new Promise((resolve, reject) => {\r\n      worker.callbacks[worker.requestId] = { resolve, reject };\r\n      worker.worker.postMessage({ action, value, requestId: worker.requestId });\r\n      worker.requestId += 1;\r\n    });\r\n  };\r\n  this.createNewLstmNetwork = (\r\n    workerId,\r\n\r\n    { inputSize = 11, hiddenLayerSize = 11, outputSize = 11 }\r\n  ) => {\r\n    return this.sendRequest(workerId, {\r\n      action: Actions.CREATE_NEW_LSTM_NETWORK,\r\n      value: { inputSize, hiddenLayerSize, outputSize },\r\n    });\r\n  };\r\n  this.loadLstmNetworkFromJson = (workerId, networkJson) => {\r\n    return this.sendRequest(workerId, {\r\n      action: Actions.LOAD_LSTM_NETWORK_FROM_JSON,\r\n      value: networkJson,\r\n    });\r\n  };\r\n  this.setInputSize = (workerId, inputSize) => {\r\n    return this.sendRequest(workerId, {\r\n      action: Actions.SET_INPUT_LAYER_SIZE,\r\n      value: inputSize,\r\n    });\r\n  };\r\n  this.setHiddenSize = (workerId, hiddenSize) => {\r\n    return this.sendRequest(workerId, {\r\n      action: Actions.SET_HIDDEN_LAYER_SIZE,\r\n      value: hiddenSize,\r\n    });\r\n  };\r\n  this.terminateWorker = (workerId) => {\r\n    const worker = this.getWorker(workerId);\r\n    worker.worker.terminate();\r\n    this.workers.splice(\r\n      this.workers.findIndex((w) => w === worker),\r\n      1\r\n    );\r\n  };\r\n}\r\n\r\nconst Actions = {\r\n  LOG: 0,\r\n  CREATE_LSTM_DATA_SET: 1,\r\n  RUN: 2,\r\n  INITIALIZE: 3,\r\n  CREATE_NEW_LSTM_NETWORK: 4,\r\n  LOAD_LSTM_NETWORK_FROM_JSON: 5,\r\n  SET_INPUT_LAYER_SIZE: 6,\r\n  SET_HIDDEN_LAYER_SIZE: 7,\r\n  TEST: 8,\r\n  TRAINING_PROGRESS: 9,\r\n};\r\n\r\nfunction getActionName(actionId) {\r\n  return Object.keys(Actions).find((key) => Actions[key] === actionId);\r\n}\r\n\r\nconst Statuses = {\r\n  ERROR: 'error',\r\n  OK: 'ok',\r\n};\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (new Workers());\r\n\n\n//# sourceURL=webpack://text-prediction/./src/Workers.js?");

/***/ }),

/***/ "./src/webWorker/neataptic.js":
/*!************************************!*\
  !*** ./src/webWorker/neataptic.js ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var __dirname = \"/\";\n/*!\r\n * The MIT License (MIT)\r\n *\r\n * Copyright 2017 Thomas Wagenaar <wagenaartje@protonmail.com>. Copyright for\r\n * portions of Neataptic are held by Copyright 2017 Juan Cazala - cazala.com, as a\r\n * part of project Synaptic.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE\r\n *\r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n  if (true)\r\n    module.exports = factory(__webpack_require__(/*! child_process */ \"?a867\"), __webpack_require__(/*! os */ \"?a268\"));\r\n  else {}\r\n})(\r\n  this,\r\n  function (__WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_25__) {\r\n    return /******/ (function (modules) {\r\n      // webpackBootstrap\r\n      /******/ // The module cache\r\n      /******/ var installedModules = {};\r\n      /******/\r\n      /******/ // The require function\r\n      /******/ function __nested_webpack_require_2135__(moduleId) {\r\n        /******/\r\n        /******/ // Check if module is in cache\r\n        /******/ if (installedModules[moduleId]) {\r\n          /******/ return installedModules[moduleId].exports;\r\n          /******/\r\n        }\r\n        /******/ // Create a new module (and put it into the cache)\r\n        /******/ var module = (installedModules[moduleId] = {\r\n          /******/ i: moduleId,\r\n          /******/ l: false,\r\n          /******/ exports: {},\r\n          /******/\r\n        });\r\n        /******/\r\n        /******/ // Execute the module function\r\n        /******/ modules[moduleId].call(\r\n          module.exports,\r\n          module,\r\n          module.exports,\r\n          __nested_webpack_require_2135__\r\n        );\r\n        /******/\r\n        /******/ // Flag the module as loaded\r\n        /******/ module.l = true;\r\n        /******/\r\n        /******/ // Return the exports of the module\r\n        /******/ return module.exports;\r\n        /******/\r\n      }\r\n      /******/\r\n      /******/\r\n      /******/ // expose the modules object (__webpack_modules__)\r\n      /******/ __nested_webpack_require_2135__.m = modules;\r\n      /******/\r\n      /******/ // expose the module cache\r\n      /******/ __nested_webpack_require_2135__.c = installedModules;\r\n      /******/\r\n      /******/ // define getter function for harmony exports\r\n      /******/ __nested_webpack_require_2135__.d = function (exports, name, getter) {\r\n        /******/ if (!__nested_webpack_require_2135__.o(exports, name)) {\r\n          /******/ Object.defineProperty(exports, name, {\r\n            /******/ configurable: false,\r\n            /******/ enumerable: true,\r\n            /******/ get: getter,\r\n            /******/\r\n          });\r\n          /******/\r\n        }\r\n        /******/\r\n      };\r\n      /******/\r\n      /******/ // getDefaultExport function for compatibility with non-harmony modules\r\n      /******/ __nested_webpack_require_2135__.n = function (module) {\r\n        /******/ var getter =\r\n          module && module.__esModule\r\n            ? /******/ function getDefault() {\r\n                return module['default'];\r\n              }\r\n            : /******/ function getModuleExports() {\r\n                return module;\r\n              };\r\n        /******/ __nested_webpack_require_2135__.d(getter, 'a', getter);\r\n        /******/ return getter;\r\n        /******/\r\n      };\r\n      /******/\r\n      /******/ // Object.prototype.hasOwnProperty.call\r\n      /******/ __nested_webpack_require_2135__.o = function (object, property) {\r\n        return Object.prototype.hasOwnProperty.call(object, property);\r\n      };\r\n      /******/\r\n      /******/ // __webpack_public_path__\r\n      /******/ __nested_webpack_require_2135__.p = '';\r\n      /******/\r\n      /******/ // Load entry module and return exports\r\n      /******/ return __nested_webpack_require_2135__((__nested_webpack_require_2135__.s = 10));\r\n      /******/\r\n    })(\r\n      /************************************************************************/\r\n      /******/ [\r\n        /* 0 */\r\n        /***/ function (module, exports, __nested_webpack_require_5095__) {\r\n          /*******************************************************************************\r\n                                  METHODS\r\n*******************************************************************************/\r\n\r\n          var methods = {\r\n            activation: __nested_webpack_require_5095__(8),\r\n            mutation: __nested_webpack_require_5095__(11),\r\n            selection: __nested_webpack_require_5095__(12),\r\n            crossover: __nested_webpack_require_5095__(13),\r\n            cost: __nested_webpack_require_5095__(14),\r\n            gating: __nested_webpack_require_5095__(15),\r\n            connection: __nested_webpack_require_5095__(16),\r\n            rate: __nested_webpack_require_5095__(17),\r\n          };\r\n\r\n          /** Export */\r\n          module.exports = methods;\r\n\r\n          /***/\r\n        },\r\n        /* 1 */\r\n        /***/ function (module, exports) {\r\n          /*******************************************************************************\r\n                                      CONFIG\r\n*******************************************************************************/\r\n\r\n          // Config\r\n          var config = {\r\n            warnings: false,\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = config;\r\n\r\n          /***/\r\n        },\r\n        /* 2 */\r\n        /***/ function (module, exports, __nested_webpack_require_6378__) {\r\n          /* Export */\r\n          module.exports = Node;\r\n\r\n          /* Import */\r\n          var methods = __nested_webpack_require_6378__(0);\r\n          var Connection = __nested_webpack_require_6378__(3);\r\n          var config = __nested_webpack_require_6378__(1);\r\n\r\n          /*******************************************************************************\r\n                                         NODE\r\n*******************************************************************************/\r\n\r\n          function Node(type) {\r\n            this.bias = type === 'input' ? 0 : Math.random() * 0.2 - 0.1;\r\n            this.squash = methods.activation.LOGISTIC;\r\n            this.type = type || 'hidden';\r\n\r\n            this.activation = 0;\r\n            this.state = 0;\r\n            this.old = 0;\r\n\r\n            // For dropout\r\n            this.mask = 1;\r\n\r\n            // For tracking momentum\r\n            this.previousDeltaBias = 0;\r\n\r\n            // Batch training\r\n            this.totalDeltaBias = 0;\r\n\r\n            this.connections = {\r\n              in: [],\r\n              out: [],\r\n              gated: [],\r\n              self: new Connection(this, this, 0),\r\n            };\r\n\r\n            // Data for backpropagation\r\n            this.error = {\r\n              responsibility: 0,\r\n              projected: 0,\r\n              gated: 0,\r\n            };\r\n          }\r\n\r\n          Node.prototype = {\r\n            /**\r\n             * Activates the node\r\n             */\r\n            activate: function (input) {\r\n              // Check if an input is given\r\n              if (typeof input !== 'undefined') {\r\n                this.activation = input;\r\n                return this.activation;\r\n              }\r\n\r\n              this.old = this.state;\r\n\r\n              // All activation sources coming from the node itself\r\n              this.state =\r\n                this.connections.self.gain *\r\n                  this.connections.self.weight *\r\n                  this.state +\r\n                this.bias;\r\n\r\n              // Activation sources coming from connections\r\n              var i;\r\n              for (i = 0; i < this.connections.in.length; i++) {\r\n                var connection = this.connections.in[i];\r\n                this.state +=\r\n                  connection.from.activation *\r\n                  connection.weight *\r\n                  connection.gain;\r\n              }\r\n\r\n              // Squash the values received\r\n              this.activation = this.squash(this.state) * this.mask;\r\n              this.derivative = this.squash(this.state, true);\r\n\r\n              // Update traces\r\n              var nodes = [];\r\n              var influences = [];\r\n\r\n              for (i = 0; i < this.connections.gated.length; i++) {\r\n                let conn = this.connections.gated[i];\r\n                let node = conn.to;\r\n\r\n                let index = nodes.indexOf(node);\r\n                if (index > -1) {\r\n                  influences[index] += conn.weight * conn.from.activation;\r\n                } else {\r\n                  nodes.push(node);\r\n                  influences.push(\r\n                    conn.weight * conn.from.activation +\r\n                      (node.connections.self.gater === this ? node.old : 0)\r\n                  );\r\n                }\r\n\r\n                // Adjust the gain to this nodes' activation\r\n                conn.gain = this.activation;\r\n              }\r\n\r\n              for (i = 0; i < this.connections.in.length; i++) {\r\n                let connection = this.connections.in[i];\r\n\r\n                // Elegibility trace\r\n                connection.elegibility =\r\n                  this.connections.self.gain *\r\n                    this.connections.self.weight *\r\n                    connection.elegibility +\r\n                  connection.from.activation * connection.gain;\r\n\r\n                // Extended trace\r\n                for (var j = 0; j < nodes.length; j++) {\r\n                  let node = nodes[j];\r\n                  let influence = influences[j];\r\n\r\n                  let index = connection.xtrace.nodes.indexOf(node);\r\n\r\n                  if (index > -1) {\r\n                    connection.xtrace.values[index] =\r\n                      node.connections.self.gain *\r\n                        node.connections.self.weight *\r\n                        connection.xtrace.values[index] +\r\n                      this.derivative * connection.elegibility * influence;\r\n                  } else {\r\n                    // Does not exist there yet, might be through mutation\r\n                    connection.xtrace.nodes.push(node);\r\n                    connection.xtrace.values.push(\r\n                      this.derivative * connection.elegibility * influence\r\n                    );\r\n                  }\r\n                }\r\n              }\r\n\r\n              return this.activation;\r\n            },\r\n\r\n            /**\r\n             * Activates the node without calculating elegibility traces and such\r\n             */\r\n            noTraceActivate: function (input) {\r\n              // Check if an input is given\r\n              if (typeof input !== 'undefined') {\r\n                this.activation = input;\r\n                return this.activation;\r\n              }\r\n\r\n              // All activation sources coming from the node itself\r\n              this.state =\r\n                this.connections.self.gain *\r\n                  this.connections.self.weight *\r\n                  this.state +\r\n                this.bias;\r\n\r\n              // Activation sources coming from connections\r\n              var i;\r\n              for (i = 0; i < this.connections.in.length; i++) {\r\n                var connection = this.connections.in[i];\r\n                this.state +=\r\n                  connection.from.activation *\r\n                  connection.weight *\r\n                  connection.gain;\r\n              }\r\n\r\n              // Squash the values received\r\n              this.activation = this.squash(this.state);\r\n\r\n              for (i = 0; i < this.connections.gated.length; i++) {\r\n                this.connections.gated[i].gain = this.activation;\r\n              }\r\n\r\n              return this.activation;\r\n            },\r\n\r\n            /**\r\n             * Back-propagate the error, aka learn\r\n             */\r\n            propagate: function (rate, momentum, update, target) {\r\n              momentum = momentum || 0;\r\n              rate = rate || 0.3;\r\n\r\n              // Error accumulator\r\n              var error = 0;\r\n\r\n              // Output nodes get their error from the enviroment\r\n              if (this.type === 'output') {\r\n                this.error.responsibility = this.error.projected =\r\n                  target - this.activation;\r\n              } else {\r\n                // the rest of the nodes compute their error responsibilities by backpropagation\r\n                // error responsibilities from all the connections projected from this node\r\n                var i;\r\n                for (i = 0; i < this.connections.out.length; i++) {\r\n                  let connection = this.connections.out[i];\r\n                  let node = connection.to;\r\n                  // Eq. 21\r\n                  error +=\r\n                    node.error.responsibility *\r\n                    connection.weight *\r\n                    connection.gain;\r\n                }\r\n\r\n                // Projected error responsibility\r\n                this.error.projected = this.derivative * error;\r\n\r\n                // Error responsibilities from all connections gated by this neuron\r\n                error = 0;\r\n\r\n                for (i = 0; i < this.connections.gated.length; i++) {\r\n                  let conn = this.connections.gated[i];\r\n                  let node = conn.to;\r\n                  let influence =\r\n                    node.connections.self.gater === this ? node.old : 0;\r\n\r\n                  influence += conn.weight * conn.from.activation;\r\n                  error += node.error.responsibility * influence;\r\n                }\r\n\r\n                // Gated error responsibility\r\n                this.error.gated = this.derivative * error;\r\n\r\n                // Error responsibility\r\n                this.error.responsibility =\r\n                  this.error.projected + this.error.gated;\r\n              }\r\n\r\n              if (this.type === 'constant') return;\r\n\r\n              // Adjust all the node's incoming connections\r\n              for (i = 0; i < this.connections.in.length; i++) {\r\n                let connection = this.connections.in[i];\r\n\r\n                let gradient = this.error.projected * connection.elegibility;\r\n\r\n                for (var j = 0; j < connection.xtrace.nodes.length; j++) {\r\n                  let node = connection.xtrace.nodes[j];\r\n                  let value = connection.xtrace.values[j];\r\n                  gradient += node.error.responsibility * value;\r\n                }\r\n\r\n                // Adjust weight\r\n                let deltaWeight = rate * gradient * this.mask;\r\n                connection.totalDeltaWeight += deltaWeight;\r\n                if (update) {\r\n                  connection.totalDeltaWeight +=\r\n                    momentum * connection.previousDeltaWeight;\r\n                  connection.weight += connection.totalDeltaWeight;\r\n                  connection.previousDeltaWeight = connection.totalDeltaWeight;\r\n                  connection.totalDeltaWeight = 0;\r\n                }\r\n              }\r\n\r\n              // Adjust bias\r\n              var deltaBias = rate * this.error.responsibility;\r\n              this.totalDeltaBias += deltaBias;\r\n              if (update) {\r\n                this.totalDeltaBias += momentum * this.previousDeltaBias;\r\n                this.bias += this.totalDeltaBias;\r\n                this.previousDeltaBias = this.totalDeltaBias;\r\n                this.totalDeltaBias = 0;\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Creates a connection from this node to the given node\r\n             */\r\n            connect: function (target, weight) {\r\n              var connections = [];\r\n              if (typeof target.bias !== 'undefined') {\r\n                // must be a node!\r\n                if (target === this) {\r\n                  // Turn on the self connection by setting the weight\r\n                  if (this.connections.self.weight !== 0) {\r\n                    if (config.warnings)\r\n                      console.warn('This connection already exists!');\r\n                  } else {\r\n                    this.connections.self.weight = weight || 1;\r\n                  }\r\n                  connections.push(this.connections.self);\r\n                } else if (this.isProjectingTo(target)) {\r\n                  throw new Error(\r\n                    'Already projecting a connection to this node!'\r\n                  );\r\n                } else {\r\n                  let connection = new Connection(this, target, weight);\r\n                  target.connections.in.push(connection);\r\n                  this.connections.out.push(connection);\r\n\r\n                  connections.push(connection);\r\n                }\r\n              } else {\r\n                // should be a group\r\n                for (var i = 0; i < target.nodes.length; i++) {\r\n                  let connection = new Connection(\r\n                    this,\r\n                    target.nodes[i],\r\n                    weight\r\n                  );\r\n                  target.nodes[i].connections.in.push(connection);\r\n                  this.connections.out.push(connection);\r\n                  target.connections.in.push(connection);\r\n\r\n                  connections.push(connection);\r\n                }\r\n              }\r\n              return connections;\r\n            },\r\n\r\n            /**\r\n             * Disconnects this node from the other node\r\n             */\r\n            disconnect: function (node, twosided) {\r\n              if (this === node) {\r\n                this.connections.self.weight = 0;\r\n                return;\r\n              }\r\n\r\n              for (var i = 0; i < this.connections.out.length; i++) {\r\n                let conn = this.connections.out[i];\r\n                if (conn.to === node) {\r\n                  this.connections.out.splice(i, 1);\r\n                  let j = conn.to.connections.in.indexOf(conn);\r\n                  conn.to.connections.in.splice(j, 1);\r\n                  if (conn.gater !== null) conn.gater.ungate(conn);\r\n                  break;\r\n                }\r\n              }\r\n\r\n              if (twosided) {\r\n                node.disconnect(this);\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Make this node gate a connection\r\n             */\r\n            gate: function (connections) {\r\n              if (!Array.isArray(connections)) {\r\n                connections = [connections];\r\n              }\r\n\r\n              for (var i = 0; i < connections.length; i++) {\r\n                var connection = connections[i];\r\n\r\n                this.connections.gated.push(connection);\r\n                connection.gater = this;\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Removes the gates from this node from the given connection(s)\r\n             */\r\n            ungate: function (connections) {\r\n              if (!Array.isArray(connections)) {\r\n                connections = [connections];\r\n              }\r\n\r\n              for (var i = connections.length - 1; i >= 0; i--) {\r\n                var connection = connections[i];\r\n\r\n                var index = this.connections.gated.indexOf(connection);\r\n                this.connections.gated.splice(index, 1);\r\n                connection.gater = null;\r\n                connection.gain = 1;\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Clear the context of the node\r\n             */\r\n            clear: function () {\r\n              for (var i = 0; i < this.connections.in.length; i++) {\r\n                var connection = this.connections.in[i];\r\n\r\n                connection.elegibility = 0;\r\n                connection.xtrace = {\r\n                  nodes: [],\r\n                  values: [],\r\n                };\r\n              }\r\n\r\n              for (i = 0; i < this.connections.gated.length; i++) {\r\n                let conn = this.connections.gated[i];\r\n                conn.gain = 0;\r\n              }\r\n\r\n              this.error.responsibility =\r\n                this.error.projected =\r\n                this.error.gated =\r\n                  0;\r\n              this.old = this.state = this.activation = 0;\r\n            },\r\n\r\n            /**\r\n             * Mutates the node with the given method\r\n             */\r\n            mutate: function (method) {\r\n              if (typeof method === 'undefined') {\r\n                throw new Error('No mutate method given!');\r\n              } else if (!(method.name in methods.mutation)) {\r\n                throw new Error('This method does not exist!');\r\n              }\r\n\r\n              switch (method) {\r\n                case methods.mutation.MOD_ACTIVATION:\r\n                  // Can't be the same squash\r\n                  var squash =\r\n                    method.allowed[\r\n                      (method.allowed.indexOf(this.squash) +\r\n                        Math.floor(\r\n                          Math.random() * (method.allowed.length - 1)\r\n                        ) +\r\n                        1) %\r\n                        method.allowed.length\r\n                    ];\r\n                  this.squash = squash;\r\n                  break;\r\n                case methods.mutation.MOD_BIAS:\r\n                  var modification =\r\n                    Math.random() * (method.max - method.min) + method.min;\r\n                  this.bias += modification;\r\n                  break;\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Checks if this node is projecting to the given node\r\n             */\r\n            isProjectingTo: function (node) {\r\n              if (node === this && this.connections.self.weight !== 0)\r\n                return true;\r\n\r\n              for (var i = 0; i < this.connections.out.length; i++) {\r\n                var conn = this.connections.out[i];\r\n                if (conn.to === node) {\r\n                  return true;\r\n                }\r\n              }\r\n              return false;\r\n            },\r\n\r\n            /**\r\n             * Checks if the given node is projecting to this node\r\n             */\r\n            isProjectedBy: function (node) {\r\n              if (node === this && this.connections.self.weight !== 0)\r\n                return true;\r\n\r\n              for (var i = 0; i < this.connections.in.length; i++) {\r\n                var conn = this.connections.in[i];\r\n                if (conn.from === node) {\r\n                  return true;\r\n                }\r\n              }\r\n\r\n              return false;\r\n            },\r\n\r\n            /**\r\n             * Converts the node to a json object\r\n             */\r\n            toJSON: function () {\r\n              var json = {\r\n                bias: this.bias,\r\n                type: this.type,\r\n                squash: this.squash.name,\r\n                mask: this.mask,\r\n              };\r\n\r\n              return json;\r\n            },\r\n          };\r\n\r\n          /**\r\n           * Convert a json object to a node\r\n           */\r\n          Node.fromJSON = function (json) {\r\n            var node = new Node();\r\n            node.bias = json.bias;\r\n            node.type = json.type;\r\n            node.mask = json.mask;\r\n            node.squash = methods.activation[json.squash];\r\n\r\n            return node;\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 3 */\r\n        /***/ function (module, exports) {\r\n          /* Export */\r\n          module.exports = Connection;\r\n\r\n          /*******************************************************************************\r\n                                      CONNECTION\r\n*******************************************************************************/\r\n\r\n          function Connection(from, to, weight) {\r\n            this.from = from;\r\n            this.to = to;\r\n            this.gain = 1;\r\n\r\n            this.weight =\r\n              typeof weight === 'undefined'\r\n                ? Math.random() * 0.2 - 0.1\r\n                : weight;\r\n\r\n            this.gater = null;\r\n            this.elegibility = 0;\r\n\r\n            // For tracking momentum\r\n            this.previousDeltaWeight = 0;\r\n\r\n            // Batch training\r\n            this.totalDeltaWeight = 0;\r\n\r\n            this.xtrace = {\r\n              nodes: [],\r\n              values: [],\r\n            };\r\n          }\r\n\r\n          Connection.prototype = {\r\n            /**\r\n             * Converts the connection to a json object\r\n             */\r\n            toJSON: function () {\r\n              var json = {\r\n                weight: this.weight,\r\n              };\r\n\r\n              return json;\r\n            },\r\n          };\r\n\r\n          /**\r\n           * Returns an innovation ID\r\n           * https://en.wikipedia.org/wiki/Pairing_function (Cantor pairing function)\r\n           */\r\n          Connection.innovationID = function (a, b) {\r\n            return (1 / 2) * (a + b) * (a + b + 1) + b;\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 4 */\r\n        /***/ function (module, exports, __nested_webpack_require_25560__) {\r\n          /* Export */\r\n          module.exports = Network;\r\n\r\n          /* Import */\r\n          var multi = __nested_webpack_require_25560__(5);\r\n          var methods = __nested_webpack_require_25560__(0);\r\n          var Connection = __nested_webpack_require_25560__(3);\r\n          var config = __nested_webpack_require_25560__(1);\r\n          var Neat = __nested_webpack_require_25560__(9);\r\n          var Node = __nested_webpack_require_25560__(2);\r\n\r\n          /* Easier variable naming */\r\n          var mutation = methods.mutation;\r\n\r\n          /*******************************************************************************\r\n                                 NETWORK\r\n*******************************************************************************/\r\n\r\n          function Network(input, output) {\r\n            if (typeof input === 'undefined' || typeof output === 'undefined') {\r\n              throw new Error('No input or output size given');\r\n            }\r\n\r\n            this.input = input;\r\n            this.output = output;\r\n\r\n            // Store all the node and connection genes\r\n            this.nodes = []; // Stored in activation order\r\n            this.connections = [];\r\n            this.gates = [];\r\n            this.selfconns = [];\r\n\r\n            // Regularization\r\n            this.dropout = 0;\r\n\r\n            // Create input and output nodes\r\n            var i;\r\n            for (i = 0; i < this.input + this.output; i++) {\r\n              var type = i < this.input ? 'input' : 'output';\r\n              this.nodes.push(new Node(type));\r\n            }\r\n\r\n            // Connect input nodes with output nodes directly\r\n            for (i = 0; i < this.input; i++) {\r\n              for (var j = this.input; j < this.output + this.input; j++) {\r\n                // https://stats.stackexchange.com/a/248040/147931\r\n                var weight =\r\n                  Math.random() * this.input * Math.sqrt(2 / this.input);\r\n                this.connect(this.nodes[i], this.nodes[j], weight);\r\n              }\r\n            }\r\n          }\r\n\r\n          Network.prototype = {\r\n            /**\r\n             * Activates the network\r\n             */\r\n            activate: function (input, training) {\r\n              var output = [];\r\n\r\n              // Activate nodes chronologically\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                if (this.nodes[i].type === 'input') {\r\n                  this.nodes[i].activate(input[i]);\r\n                } else if (this.nodes[i].type === 'output') {\r\n                  var activation = this.nodes[i].activate();\r\n                  output.push(activation);\r\n                } else {\r\n                  if (training)\r\n                    this.nodes[i].mask = Math.random() < this.dropout ? 0 : 1;\r\n                  this.nodes[i].activate();\r\n                }\r\n              }\r\n\r\n              return output;\r\n            },\r\n\r\n            /**\r\n             * Activates the network without calculating elegibility traces and such\r\n             */\r\n            noTraceActivate: function (input) {\r\n              var output = [];\r\n\r\n              // Activate nodes chronologically\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                if (this.nodes[i].type === 'input') {\r\n                  this.nodes[i].noTraceActivate(input[i]);\r\n                } else if (this.nodes[i].type === 'output') {\r\n                  var activation = this.nodes[i].noTraceActivate();\r\n                  output.push(activation);\r\n                } else {\r\n                  this.nodes[i].noTraceActivate();\r\n                }\r\n              }\r\n\r\n              return output;\r\n            },\r\n\r\n            /**\r\n             * Backpropagate the network\r\n             */\r\n            propagate: function (rate, momentum, update, target) {\r\n              if (\r\n                typeof target === 'undefined' ||\r\n                target.length !== this.output\r\n              ) {\r\n                throw new Error(\r\n                  'Output target length should match network output length'\r\n                );\r\n              }\r\n\r\n              var targetIndex = target.length;\r\n\r\n              // Propagate output nodes\r\n              var i;\r\n              for (\r\n                i = this.nodes.length - 1;\r\n                i >= this.nodes.length - this.output;\r\n                i--\r\n              ) {\r\n                this.nodes[i].propagate(\r\n                  rate,\r\n                  momentum,\r\n                  update,\r\n                  target[--targetIndex]\r\n                );\r\n              }\r\n\r\n              // Propagate hidden and input nodes\r\n              for (\r\n                i = this.nodes.length - this.output - 1;\r\n                i >= this.input;\r\n                i--\r\n              ) {\r\n                this.nodes[i].propagate(rate, momentum, update);\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Clear the context of the network\r\n             */\r\n            clear: function () {\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                this.nodes[i].clear();\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Connects the from node to the to node\r\n             */\r\n            connect: function (from, to, weight) {\r\n              var connections = from.connect(to, weight);\r\n\r\n              for (var i = 0; i < connections.length; i++) {\r\n                var connection = connections[i];\r\n                if (from !== to) {\r\n                  this.connections.push(connection);\r\n                } else {\r\n                  this.selfconns.push(connection);\r\n                }\r\n              }\r\n\r\n              return connections;\r\n            },\r\n\r\n            /**\r\n             * Disconnects the from node from the to node\r\n             */\r\n            disconnect: function (from, to) {\r\n              // Delete the connection in the network's connection array\r\n              var connections = from === to ? this.selfconns : this.connections;\r\n\r\n              for (var i = 0; i < connections.length; i++) {\r\n                var connection = connections[i];\r\n                if (connection.from === from && connection.to === to) {\r\n                  if (connection.gater !== null) this.ungate(connection);\r\n                  connections.splice(i, 1);\r\n                  break;\r\n                }\r\n              }\r\n\r\n              // Delete the connection at the sending and receiving neuron\r\n              from.disconnect(to);\r\n            },\r\n\r\n            /**\r\n             * Gate a connection with a node\r\n             */\r\n            gate: function (node, connection) {\r\n              if (this.nodes.indexOf(node) === -1) {\r\n                throw new Error('This node is not part of the network!');\r\n              } else if (connection.gater != null) {\r\n                if (config.warnings)\r\n                  console.warn('This connection is already gated!');\r\n                return;\r\n              }\r\n              node.gate(connection);\r\n              this.gates.push(connection);\r\n            },\r\n\r\n            /**\r\n             *  Remove the gate of a connection\r\n             */\r\n            ungate: function (connection) {\r\n              var index = this.gates.indexOf(connection);\r\n              if (index === -1) {\r\n                throw new Error('This connection is not gated!');\r\n              }\r\n\r\n              this.gates.splice(index, 1);\r\n              connection.gater.ungate(connection);\r\n            },\r\n\r\n            /**\r\n             *  Removes a node from the network\r\n             */\r\n            remove: function (node) {\r\n              var index = this.nodes.indexOf(node);\r\n\r\n              if (index === -1) {\r\n                throw new Error('This node does not exist in the network!');\r\n              }\r\n\r\n              // Keep track of gaters\r\n              var gaters = [];\r\n\r\n              // Remove selfconnections from this.selfconns\r\n              this.disconnect(node, node);\r\n\r\n              // Get all its inputting nodes\r\n              var inputs = [];\r\n              for (var i = node.connections.in.length - 1; i >= 0; i--) {\r\n                let connection = node.connections.in[i];\r\n                if (\r\n                  mutation.SUB_NODE.keep_gates &&\r\n                  connection.gater !== null &&\r\n                  connection.gater !== node\r\n                ) {\r\n                  gaters.push(connection.gater);\r\n                }\r\n                inputs.push(connection.from);\r\n                this.disconnect(connection.from, node);\r\n              }\r\n\r\n              // Get all its outputing nodes\r\n              var outputs = [];\r\n              for (i = node.connections.out.length - 1; i >= 0; i--) {\r\n                let connection = node.connections.out[i];\r\n                if (\r\n                  mutation.SUB_NODE.keep_gates &&\r\n                  connection.gater !== null &&\r\n                  connection.gater !== node\r\n                ) {\r\n                  gaters.push(connection.gater);\r\n                }\r\n                outputs.push(connection.to);\r\n                this.disconnect(node, connection.to);\r\n              }\r\n\r\n              // Connect the input nodes to the output nodes (if not already connected)\r\n              var connections = [];\r\n              for (i = 0; i < inputs.length; i++) {\r\n                let input = inputs[i];\r\n                for (var j = 0; j < outputs.length; j++) {\r\n                  let output = outputs[j];\r\n                  if (!input.isProjectingTo(output)) {\r\n                    var conn = this.connect(input, output);\r\n                    connections.push(conn[0]);\r\n                  }\r\n                }\r\n              }\r\n\r\n              // Gate random connections with gaters\r\n              for (i = 0; i < gaters.length; i++) {\r\n                if (connections.length === 0) break;\r\n\r\n                let gater = gaters[i];\r\n                let connIndex = Math.floor(Math.random() * connections.length);\r\n\r\n                this.gate(gater, connections[connIndex]);\r\n                connections.splice(connIndex, 1);\r\n              }\r\n\r\n              // Remove gated connections gated by this node\r\n              for (i = node.connections.gated.length - 1; i >= 0; i--) {\r\n                let conn = node.connections.gated[i];\r\n                this.ungate(conn);\r\n              }\r\n\r\n              // Remove selfconnection\r\n              this.disconnect(node, node);\r\n\r\n              // Remove the node from this.nodes\r\n              this.nodes.splice(index, 1);\r\n            },\r\n\r\n            /**\r\n             * Mutates the network with the given method\r\n             */\r\n            mutate: function (method) {\r\n              if (typeof method === 'undefined') {\r\n                throw new Error('No (correct) mutate method given!');\r\n              }\r\n\r\n              var i, j;\r\n              switch (method) {\r\n                case mutation.ADD_NODE:\r\n                  // Look for an existing connection and place a node in between\r\n                  var connection =\r\n                    this.connections[\r\n                      Math.floor(Math.random() * this.connections.length)\r\n                    ];\r\n                  var gater = connection.gater;\r\n                  this.disconnect(connection.from, connection.to);\r\n\r\n                  // Insert the new node right before the old connection.to\r\n                  var toIndex = this.nodes.indexOf(connection.to);\r\n                  var node = new Node('hidden');\r\n\r\n                  // Random squash function\r\n                  node.mutate(mutation.MOD_ACTIVATION);\r\n\r\n                  // Place it in this.nodes\r\n                  var minBound = Math.min(\r\n                    toIndex,\r\n                    this.nodes.length - this.output\r\n                  );\r\n                  this.nodes.splice(minBound, 0, node);\r\n\r\n                  // Now create two new connections\r\n                  var newConn1 = this.connect(connection.from, node)[0];\r\n                  var newConn2 = this.connect(node, connection.to)[0];\r\n\r\n                  // Check if the original connection was gated\r\n                  if (gater != null) {\r\n                    this.gate(\r\n                      gater,\r\n                      Math.random() >= 0.5 ? newConn1 : newConn2\r\n                    );\r\n                  }\r\n                  break;\r\n                case mutation.SUB_NODE:\r\n                  // Check if there are nodes left to remove\r\n                  if (this.nodes.length === this.input + this.output) {\r\n                    if (config.warnings)\r\n                      console.warn('No more nodes left to remove!');\r\n                    break;\r\n                  }\r\n\r\n                  // Select a node which isn't an input or output node\r\n                  var index = Math.floor(\r\n                    Math.random() *\r\n                      (this.nodes.length - this.output - this.input) +\r\n                      this.input\r\n                  );\r\n                  this.remove(this.nodes[index]);\r\n                  break;\r\n                case mutation.ADD_CONN:\r\n                  // Create an array of all uncreated (feedforward) connections\r\n                  var available = [];\r\n                  for (i = 0; i < this.nodes.length - this.output; i++) {\r\n                    let node1 = this.nodes[i];\r\n                    for (\r\n                      j = Math.max(i + 1, this.input);\r\n                      j < this.nodes.length;\r\n                      j++\r\n                    ) {\r\n                      let node2 = this.nodes[j];\r\n                      if (!node1.isProjectingTo(node2))\r\n                        available.push([node1, node2]);\r\n                    }\r\n                  }\r\n\r\n                  if (available.length === 0) {\r\n                    if (config.warnings)\r\n                      console.warn('No more connections to be made!');\r\n                    break;\r\n                  }\r\n\r\n                  var pair =\r\n                    available[Math.floor(Math.random() * available.length)];\r\n                  this.connect(pair[0], pair[1]);\r\n                  break;\r\n                case mutation.SUB_CONN:\r\n                  // List of possible connections that can be removed\r\n                  var possible = [];\r\n\r\n                  for (i = 0; i < this.connections.length; i++) {\r\n                    let conn = this.connections[i];\r\n                    // Check if it is not disabling a node\r\n                    if (\r\n                      conn.from.connections.out.length > 1 &&\r\n                      conn.to.connections.in.length > 1 &&\r\n                      this.nodes.indexOf(conn.to) >\r\n                        this.nodes.indexOf(conn.from)\r\n                    ) {\r\n                      possible.push(conn);\r\n                    }\r\n                  }\r\n\r\n                  if (possible.length === 0) {\r\n                    if (config.warnings)\r\n                      console.warn('No connections to remove!');\r\n                    break;\r\n                  }\r\n\r\n                  var randomConn =\r\n                    possible[Math.floor(Math.random() * possible.length)];\r\n                  this.disconnect(randomConn.from, randomConn.to);\r\n                  break;\r\n                case mutation.MOD_WEIGHT:\r\n                  var allconnections = this.connections.concat(this.selfconns);\r\n\r\n                  var connection =\r\n                    allconnections[\r\n                      Math.floor(Math.random() * allconnections.length)\r\n                    ];\r\n                  var modification =\r\n                    Math.random() * (method.max - method.min) + method.min;\r\n                  connection.weight += modification;\r\n                  break;\r\n                case mutation.MOD_BIAS:\r\n                  // Has no effect on input node, so they are excluded\r\n                  var index = Math.floor(\r\n                    Math.random() * (this.nodes.length - this.input) +\r\n                      this.input\r\n                  );\r\n                  var node = this.nodes[index];\r\n                  node.mutate(method);\r\n                  break;\r\n                case mutation.MOD_ACTIVATION:\r\n                  // Has no effect on input node, so they are excluded\r\n                  if (\r\n                    !method.mutateOutput &&\r\n                    this.input + this.output === this.nodes.length\r\n                  ) {\r\n                    if (config.warnings)\r\n                      console.warn(\r\n                        'No nodes that allow mutation of activation function'\r\n                      );\r\n                    break;\r\n                  }\r\n\r\n                  var index = Math.floor(\r\n                    Math.random() *\r\n                      (this.nodes.length -\r\n                        (method.mutateOutput ? 0 : this.output) -\r\n                        this.input) +\r\n                      this.input\r\n                  );\r\n                  var node = this.nodes[index];\r\n\r\n                  node.mutate(method);\r\n                  break;\r\n                case mutation.ADD_SELF_CONN:\r\n                  // Check which nodes aren't selfconnected yet\r\n                  var possible = [];\r\n                  for (i = this.input; i < this.nodes.length; i++) {\r\n                    let node = this.nodes[i];\r\n                    if (node.connections.self.weight === 0) {\r\n                      possible.push(node);\r\n                    }\r\n                  }\r\n\r\n                  if (possible.length === 0) {\r\n                    if (config.warnings)\r\n                      console.warn('No more self-connections to add!');\r\n                    break;\r\n                  }\r\n\r\n                  // Select a random node\r\n                  var node =\r\n                    possible[Math.floor(Math.random() * possible.length)];\r\n\r\n                  // Connect it to himself\r\n                  this.connect(node, node);\r\n                  break;\r\n                case mutation.SUB_SELF_CONN:\r\n                  if (this.selfconns.length === 0) {\r\n                    if (config.warnings)\r\n                      console.warn('No more self-connections to remove!');\r\n                    break;\r\n                  }\r\n                  var conn =\r\n                    this.selfconns[\r\n                      Math.floor(Math.random() * this.selfconns.length)\r\n                    ];\r\n                  this.disconnect(conn.from, conn.to);\r\n                  break;\r\n                case mutation.ADD_GATE:\r\n                  var allconnections = this.connections.concat(this.selfconns);\r\n\r\n                  // Create a list of all non-gated connections\r\n                  var possible = [];\r\n                  for (i = 0; i < allconnections.length; i++) {\r\n                    let conn = allconnections[i];\r\n                    if (conn.gater === null) {\r\n                      possible.push(conn);\r\n                    }\r\n                  }\r\n\r\n                  if (possible.length === 0) {\r\n                    if (config.warnings)\r\n                      console.warn('No more connections to gate!');\r\n                    break;\r\n                  }\r\n\r\n                  // Select a random gater node and connection, can't be gated by input\r\n                  var index = Math.floor(\r\n                    Math.random() * (this.nodes.length - this.input) +\r\n                      this.input\r\n                  );\r\n                  var node = this.nodes[index];\r\n                  var conn =\r\n                    possible[Math.floor(Math.random() * possible.length)];\r\n\r\n                  // Gate the connection with the node\r\n                  this.gate(node, conn);\r\n                  break;\r\n                case mutation.SUB_GATE:\r\n                  // Select a random gated connection\r\n                  if (this.gates.length === 0) {\r\n                    if (config.warnings)\r\n                      console.warn('No more connections to ungate!');\r\n                    break;\r\n                  }\r\n\r\n                  var index = Math.floor(Math.random() * this.gates.length);\r\n                  var gatedconn = this.gates[index];\r\n\r\n                  this.ungate(gatedconn);\r\n                  break;\r\n                case mutation.ADD_BACK_CONN:\r\n                  // Create an array of all uncreated (backfed) connections\r\n                  var available = [];\r\n                  for (i = this.input; i < this.nodes.length; i++) {\r\n                    let node1 = this.nodes[i];\r\n                    for (j = this.input; j < i; j++) {\r\n                      let node2 = this.nodes[j];\r\n                      if (!node1.isProjectingTo(node2))\r\n                        available.push([node1, node2]);\r\n                    }\r\n                  }\r\n\r\n                  if (available.length === 0) {\r\n                    if (config.warnings)\r\n                      console.warn('No more connections to be made!');\r\n                    break;\r\n                  }\r\n\r\n                  var pair =\r\n                    available[Math.floor(Math.random() * available.length)];\r\n                  this.connect(pair[0], pair[1]);\r\n                  break;\r\n                case mutation.SUB_BACK_CONN:\r\n                  // List of possible connections that can be removed\r\n                  var possible = [];\r\n\r\n                  for (i = 0; i < this.connections.length; i++) {\r\n                    let conn = this.connections[i];\r\n                    // Check if it is not disabling a node\r\n                    if (\r\n                      conn.from.connections.out.length > 1 &&\r\n                      conn.to.connections.in.length > 1 &&\r\n                      this.nodes.indexOf(conn.from) >\r\n                        this.nodes.indexOf(conn.to)\r\n                    ) {\r\n                      possible.push(conn);\r\n                    }\r\n                  }\r\n\r\n                  if (possible.length === 0) {\r\n                    if (config.warnings)\r\n                      console.warn('No connections to remove!');\r\n                    break;\r\n                  }\r\n\r\n                  var randomConn =\r\n                    possible[Math.floor(Math.random() * possible.length)];\r\n                  this.disconnect(randomConn.from, randomConn.to);\r\n                  break;\r\n                case mutation.SWAP_NODES:\r\n                  // Has no effect on input node, so they are excluded\r\n                  if (\r\n                    (method.mutateOutput &&\r\n                      this.nodes.length - this.input < 2) ||\r\n                    (!method.mutateOutput &&\r\n                      this.nodes.length - this.input - this.output < 2)\r\n                  ) {\r\n                    if (config.warnings)\r\n                      console.warn(\r\n                        'No nodes that allow swapping of bias and activation function'\r\n                      );\r\n                    break;\r\n                  }\r\n\r\n                  var index = Math.floor(\r\n                    Math.random() *\r\n                      (this.nodes.length -\r\n                        (method.mutateOutput ? 0 : this.output) -\r\n                        this.input) +\r\n                      this.input\r\n                  );\r\n                  var node1 = this.nodes[index];\r\n                  index = Math.floor(\r\n                    Math.random() *\r\n                      (this.nodes.length -\r\n                        (method.mutateOutput ? 0 : this.output) -\r\n                        this.input) +\r\n                      this.input\r\n                  );\r\n                  var node2 = this.nodes[index];\r\n\r\n                  var biasTemp = node1.bias;\r\n                  var squashTemp = node1.squash;\r\n\r\n                  node1.bias = node2.bias;\r\n                  node1.squash = node2.squash;\r\n                  node2.bias = biasTemp;\r\n                  node2.squash = squashTemp;\r\n                  break;\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Train the given set to this network\r\n             */\r\n            train: function (set, options) {\r\n              if (\r\n                set[0].input.length !== this.input ||\r\n                set[0].output.length !== this.output\r\n              ) {\r\n                throw new Error(\r\n                  'Dataset input/output size should be same as network input/output size!'\r\n                );\r\n              }\r\n\r\n              options = options || {};\r\n\r\n              // Warning messages\r\n              if (typeof options.rate === 'undefined') {\r\n                if (config.warnings)\r\n                  console.warn(\r\n                    'Using default learning rate, please define a rate!'\r\n                  );\r\n              }\r\n              if (typeof options.iterations === 'undefined') {\r\n                if (config.warnings)\r\n                  console.warn(\r\n                    'No target iterations given, running until error is reached!'\r\n                  );\r\n              }\r\n\r\n              // Read the options\r\n              var targetError = options.error || 0.05;\r\n              var cost = options.cost || methods.cost.MSE;\r\n              var baseRate = options.rate || 0.3;\r\n              var dropout = options.dropout || 0;\r\n              var momentum = options.momentum || 0;\r\n              var batchSize = options.batchSize || 1; // online learning\r\n              var ratePolicy = options.ratePolicy || methods.rate.FIXED();\r\n\r\n              var start = Date.now();\r\n\r\n              if (batchSize > set.length) {\r\n                throw new Error(\r\n                  'Batch size must be smaller or equal to dataset length!'\r\n                );\r\n              } else if (\r\n                typeof options.iterations === 'undefined' &&\r\n                typeof options.error === 'undefined'\r\n              ) {\r\n                throw new Error(\r\n                  'At least one of the following options must be specified: error, iterations'\r\n                );\r\n              } else if (typeof options.error === 'undefined') {\r\n                targetError = -1; // run until iterations\r\n              } else if (typeof options.iterations === 'undefined') {\r\n                options.iterations = 0; // run until target error\r\n              }\r\n\r\n              // Save to network\r\n              this.dropout = dropout;\r\n\r\n              if (options.crossValidate) {\r\n                let numTrain = Math.ceil(\r\n                  (1 - options.crossValidate.testSize) * set.length\r\n                );\r\n                var trainSet = set.slice(0, numTrain);\r\n                var testSet = set.slice(numTrain);\r\n              }\r\n\r\n              // Loops the training process\r\n              var currentRate = baseRate;\r\n              var iteration = 0;\r\n              var error = 1;\r\n\r\n              var i, j, x;\r\n              while (\r\n                !options.kill &&\r\n                error > targetError &&\r\n                (options.iterations === 0 || iteration < options.iterations)\r\n              ) {\r\n                if (\r\n                  options.crossValidate &&\r\n                  error <= options.crossValidate.testError\r\n                )\r\n                  break;\r\n\r\n                iteration++;\r\n\r\n                // Update the rate\r\n                currentRate = ratePolicy(baseRate, iteration);\r\n\r\n                // Checks if cross validation is enabled\r\n                if (options.crossValidate) {\r\n                  this._trainSet(\r\n                    trainSet,\r\n                    batchSize,\r\n                    currentRate,\r\n                    momentum,\r\n                    cost\r\n                  );\r\n                  if (options.clear) this.clear();\r\n                  error = this.test(testSet, cost).error;\r\n                  if (options.clear) this.clear();\r\n                } else {\r\n                  error = this._trainSet(\r\n                    set,\r\n                    batchSize,\r\n                    currentRate,\r\n                    momentum,\r\n                    cost\r\n                  );\r\n                  if (options.clear) this.clear();\r\n                }\r\n\r\n                // Checks for options such as scheduled logs and shuffling\r\n                if (options.shuffle) {\r\n                  for (\r\n                    j, x, i = set.length;\r\n                    i;\r\n                    j = Math.floor(Math.random() * i),\r\n                      x = set[--i],\r\n                      set[i] = set[j],\r\n                      set[j] = x\r\n                  );\r\n                }\r\n\r\n                if (options.log && iteration % options.log === 0) {\r\n                  console.log(\r\n                    'iteration',\r\n                    iteration,\r\n                    'error',\r\n                    error,\r\n                    'rate',\r\n                    currentRate\r\n                  );\r\n                }\r\n\r\n                if (\r\n                  options.schedule &&\r\n                  iteration % options.schedule.iterations === 0\r\n                ) {\r\n                  options.schedule.function({\r\n                    error: error,\r\n                    iteration: iteration,\r\n                  });\r\n                }\r\n              }\r\n\r\n              if (options.clear) this.clear();\r\n\r\n              if (dropout) {\r\n                for (i = 0; i < this.nodes.length; i++) {\r\n                  if (\r\n                    this.nodes[i].type === 'hidden' ||\r\n                    this.nodes[i].type === 'constant'\r\n                  ) {\r\n                    this.nodes[i].mask = 1 - this.dropout;\r\n                  }\r\n                }\r\n              }\r\n\r\n              return {\r\n                error: error,\r\n                iterations: iteration,\r\n                time: Date.now() - start,\r\n              };\r\n            },\r\n\r\n            /**\r\n             * Performs one training epoch and returns the error\r\n             * private function used in this.train\r\n             */\r\n            _trainSet: function (\r\n              set,\r\n              batchSize,\r\n              currentRate,\r\n              momentum,\r\n              costFunction\r\n            ) {\r\n              var errorSum = 0;\r\n              for (var i = 0; i < set.length; i++) {\r\n                var input = set[i].input;\r\n                var target = set[i].output;\r\n\r\n                var update = !!(\r\n                  (i + 1) % batchSize === 0 || i + 1 === set.length\r\n                );\r\n\r\n                var output = this.activate(input, true);\r\n                this.propagate(currentRate, momentum, update, target);\r\n\r\n                errorSum += costFunction(target, output);\r\n              }\r\n              return errorSum / set.length;\r\n            },\r\n\r\n            /**\r\n             * Tests a set and returns the error and elapsed time\r\n             */\r\n            test: function (set, cost = methods.cost.MSE) {\r\n              // Check if dropout is enabled, set correct mask\r\n              var i;\r\n              if (this.dropout) {\r\n                for (i = 0; i < this.nodes.length; i++) {\r\n                  if (\r\n                    this.nodes[i].type === 'hidden' ||\r\n                    this.nodes[i].type === 'constant'\r\n                  ) {\r\n                    this.nodes[i].mask = 1 - this.dropout;\r\n                  }\r\n                }\r\n              }\r\n\r\n              var error = 0;\r\n              var start = Date.now();\r\n\r\n              for (i = 0; i < set.length; i++) {\r\n                let input = set[i].input;\r\n                let target = set[i].output;\r\n                let output = this.noTraceActivate(input);\r\n                error += cost(target, output);\r\n              }\r\n\r\n              error /= set.length;\r\n\r\n              var results = {\r\n                error: error,\r\n                time: Date.now() - start,\r\n              };\r\n\r\n              return results;\r\n            },\r\n\r\n            /**\r\n             * Creates a json that can be used to create a graph with d3 and webcola\r\n             */\r\n            graph: function (width, height) {\r\n              var input = 0;\r\n              var output = 0;\r\n\r\n              var json = {\r\n                nodes: [],\r\n                links: [],\r\n                constraints: [\r\n                  {\r\n                    type: 'alignment',\r\n                    axis: 'x',\r\n                    offsets: [],\r\n                  },\r\n                  {\r\n                    type: 'alignment',\r\n                    axis: 'y',\r\n                    offsets: [],\r\n                  },\r\n                ],\r\n              };\r\n\r\n              var i;\r\n              for (i = 0; i < this.nodes.length; i++) {\r\n                var node = this.nodes[i];\r\n\r\n                if (node.type === 'input') {\r\n                  if (this.input === 1) {\r\n                    json.constraints[0].offsets.push({\r\n                      node: i,\r\n                      offset: 0,\r\n                    });\r\n                  } else {\r\n                    json.constraints[0].offsets.push({\r\n                      node: i,\r\n                      offset: ((0.8 * width) / (this.input - 1)) * input++,\r\n                    });\r\n                  }\r\n                  json.constraints[1].offsets.push({\r\n                    node: i,\r\n                    offset: 0,\r\n                  });\r\n                } else if (node.type === 'output') {\r\n                  if (this.output === 1) {\r\n                    json.constraints[0].offsets.push({\r\n                      node: i,\r\n                      offset: 0,\r\n                    });\r\n                  } else {\r\n                    json.constraints[0].offsets.push({\r\n                      node: i,\r\n                      offset: ((0.8 * width) / (this.output - 1)) * output++,\r\n                    });\r\n                  }\r\n                  json.constraints[1].offsets.push({\r\n                    node: i,\r\n                    offset: -0.8 * height,\r\n                  });\r\n                }\r\n\r\n                json.nodes.push({\r\n                  id: i,\r\n                  name:\r\n                    node.type === 'hidden'\r\n                      ? node.squash.name\r\n                      : node.type.toUpperCase(),\r\n                  activation: node.activation,\r\n                  bias: node.bias,\r\n                });\r\n              }\r\n\r\n              var connections = this.connections.concat(this.selfconns);\r\n              for (i = 0; i < connections.length; i++) {\r\n                var connection = connections[i];\r\n                if (connection.gater == null) {\r\n                  json.links.push({\r\n                    source: this.nodes.indexOf(connection.from),\r\n                    target: this.nodes.indexOf(connection.to),\r\n                    weight: connection.weight,\r\n                  });\r\n                } else {\r\n                  // Add a gater 'node'\r\n                  var index = json.nodes.length;\r\n                  json.nodes.push({\r\n                    id: index,\r\n                    activation: connection.gater.activation,\r\n                    name: 'GATE',\r\n                  });\r\n                  json.links.push({\r\n                    source: this.nodes.indexOf(connection.from),\r\n                    target: index,\r\n                    weight: (1 / 2) * connection.weight,\r\n                  });\r\n                  json.links.push({\r\n                    source: index,\r\n                    target: this.nodes.indexOf(connection.to),\r\n                    weight: (1 / 2) * connection.weight,\r\n                  });\r\n                  json.links.push({\r\n                    source: this.nodes.indexOf(connection.gater),\r\n                    target: index,\r\n                    weight: connection.gater.activation,\r\n                    gate: true,\r\n                  });\r\n                }\r\n              }\r\n\r\n              return json;\r\n            },\r\n\r\n            /**\r\n             * Convert the network to a json object\r\n             */\r\n            toJSON: function () {\r\n              var json = {\r\n                nodes: [],\r\n                connections: [],\r\n                input: this.input,\r\n                output: this.output,\r\n                dropout: this.dropout,\r\n              };\r\n\r\n              // So we don't have to use expensive .indexOf()\r\n              var i;\r\n              for (i = 0; i < this.nodes.length; i++) {\r\n                this.nodes[i].index = i;\r\n              }\r\n\r\n              for (i = 0; i < this.nodes.length; i++) {\r\n                let node = this.nodes[i];\r\n                let tojson = node.toJSON();\r\n                tojson.index = i;\r\n                json.nodes.push(tojson);\r\n\r\n                if (node.connections.self.weight !== 0) {\r\n                  let tojson = node.connections.self.toJSON();\r\n                  tojson.from = i;\r\n                  tojson.to = i;\r\n\r\n                  tojson.gater =\r\n                    node.connections.self.gater != null\r\n                      ? node.connections.self.gater.index\r\n                      : null;\r\n                  json.connections.push(tojson);\r\n                }\r\n              }\r\n\r\n              for (i = 0; i < this.connections.length; i++) {\r\n                let conn = this.connections[i];\r\n                let tojson = conn.toJSON();\r\n                tojson.from = conn.from.index;\r\n                tojson.to = conn.to.index;\r\n\r\n                tojson.gater = conn.gater != null ? conn.gater.index : null;\r\n\r\n                json.connections.push(tojson);\r\n              }\r\n\r\n              return json;\r\n            },\r\n\r\n            /**\r\n             * Sets the value of a property for every node in this network\r\n             */\r\n            set: function (values) {\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                this.nodes[i].bias = values.bias || this.nodes[i].bias;\r\n                this.nodes[i].squash = values.squash || this.nodes[i].squash;\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Evolves the network to reach a lower error on a dataset\r\n             */\r\n            evolve: async function (set, options) {\r\n              if (\r\n                set[0].input.length !== this.input ||\r\n                set[0].output.length !== this.output\r\n              ) {\r\n                throw new Error(\r\n                  'Dataset input/output size should be same as network input/output size!'\r\n                );\r\n              }\r\n\r\n              // Read the options\r\n              options = options || {};\r\n              var targetError =\r\n                typeof options.error !== 'undefined' ? options.error : 0.05;\r\n              var growth =\r\n                typeof options.growth !== 'undefined' ? options.growth : 0.0001;\r\n              var cost = options.cost || methods.cost.MSE;\r\n              var amount = options.amount || 1;\r\n\r\n              var threads = options.threads;\r\n              if (typeof threads === 'undefined') {\r\n                if (typeof window === 'undefined') {\r\n                  // Node.js\r\n                  threads = __nested_webpack_require_25560__(25).cpus().length;\r\n                } else {\r\n                  // Browser\r\n                  threads = navigator.hardwareConcurrency;\r\n                }\r\n              }\r\n\r\n              var start = Date.now();\r\n\r\n              if (\r\n                typeof options.iterations === 'undefined' &&\r\n                typeof options.error === 'undefined'\r\n              ) {\r\n                throw new Error(\r\n                  'At least one of the following options must be specified: error, iterations'\r\n                );\r\n              } else if (typeof options.error === 'undefined') {\r\n                targetError = -1; // run until iterations\r\n              } else if (typeof options.iterations === 'undefined') {\r\n                options.iterations = 0; // run until target error\r\n              }\r\n\r\n              var fitnessFunction;\r\n              if (threads === 1) {\r\n                // Create the fitness function\r\n                fitnessFunction = function (genome) {\r\n                  var score = 0;\r\n                  for (var i = 0; i < amount; i++) {\r\n                    score -= genome.test(set, cost).error;\r\n                  }\r\n\r\n                  score -=\r\n                    (genome.nodes.length -\r\n                      genome.input -\r\n                      genome.output +\r\n                      genome.connections.length +\r\n                      genome.gates.length) *\r\n                    growth;\r\n                  score = isNaN(score) ? -Infinity : score; // this can cause problems with fitness proportionate selection\r\n\r\n                  return score / amount;\r\n                };\r\n              } else {\r\n                // Serialize the dataset\r\n                var converted = multi.serializeDataSet(set);\r\n\r\n                // Create workers, send datasets\r\n                var workers = [];\r\n                if (typeof window === 'undefined') {\r\n                  for (var i = 0; i < threads; i++) {\r\n                    workers.push(\r\n                      new multi.workers.node.TestWorker(converted, cost)\r\n                    );\r\n                  }\r\n                } else {\r\n                  for (var i = 0; i < threads; i++) {\r\n                    workers.push(\r\n                      new multi.workers.browser.TestWorker(converted, cost)\r\n                    );\r\n                  }\r\n                }\r\n\r\n                fitnessFunction = function (population) {\r\n                  return new Promise((resolve, reject) => {\r\n                    // Create a queue\r\n                    var queue = population.slice();\r\n                    var done = 0;\r\n\r\n                    // Start worker function\r\n                    var startWorker = function (worker) {\r\n                      if (!queue.length) {\r\n                        if (++done === threads) resolve();\r\n                        return;\r\n                      }\r\n\r\n                      var genome = queue.shift();\r\n\r\n                      worker.evaluate(genome).then(function (result) {\r\n                        genome.score = -result;\r\n                        genome.score -=\r\n                          (genome.nodes.length -\r\n                            genome.input -\r\n                            genome.output +\r\n                            genome.connections.length +\r\n                            genome.gates.length) *\r\n                          growth;\r\n                        genome.score = isNaN(parseFloat(result))\r\n                          ? -Infinity\r\n                          : genome.score;\r\n                        startWorker(worker);\r\n                      });\r\n                    };\r\n\r\n                    for (var i = 0; i < workers.length; i++) {\r\n                      startWorker(workers[i]);\r\n                    }\r\n                  });\r\n                };\r\n\r\n                options.fitnessPopulation = true;\r\n              }\r\n\r\n              // Intialise the NEAT instance\r\n              options.network = this;\r\n              var neat = new Neat(\r\n                this.input,\r\n                this.output,\r\n                fitnessFunction,\r\n                options\r\n              );\r\n\r\n              var error = -Infinity;\r\n              var bestFitness = -Infinity;\r\n              var bestGenome;\r\n\r\n              while (\r\n                error < -targetError &&\r\n                (options.iterations === 0 ||\r\n                  neat.generation < options.iterations)\r\n              ) {\r\n                let fittest = await neat.evolve();\r\n                let fitness = fittest.score;\r\n                error =\r\n                  fitness +\r\n                  (fittest.nodes.length -\r\n                    fittest.input -\r\n                    fittest.output +\r\n                    fittest.connections.length +\r\n                    fittest.gates.length) *\r\n                    growth;\r\n\r\n                if (fitness > bestFitness) {\r\n                  bestFitness = fitness;\r\n                  bestGenome = fittest;\r\n                }\r\n\r\n                if (options.log && neat.generation % options.log === 0) {\r\n                  console.log(\r\n                    'iteration',\r\n                    neat.generation,\r\n                    'fitness',\r\n                    fitness,\r\n                    'error',\r\n                    -error\r\n                  );\r\n                }\r\n\r\n                if (\r\n                  options.schedule &&\r\n                  neat.generation % options.schedule.iterations === 0\r\n                ) {\r\n                  options.schedule.function({\r\n                    fitness: fitness,\r\n                    error: -error,\r\n                    iteration: neat.generation,\r\n                  });\r\n                }\r\n              }\r\n\r\n              if (threads > 1) {\r\n                for (var i = 0; i < workers.length; i++) workers[i].terminate();\r\n              }\r\n\r\n              if (typeof bestGenome !== 'undefined') {\r\n                this.nodes = bestGenome.nodes;\r\n                this.connections = bestGenome.connections;\r\n                this.selfconns = bestGenome.selfconns;\r\n                this.gates = bestGenome.gates;\r\n\r\n                if (options.clear) this.clear();\r\n              }\r\n\r\n              return {\r\n                error: -error,\r\n                iterations: neat.generation,\r\n                time: Date.now() - start,\r\n              };\r\n            },\r\n\r\n            /**\r\n             * Creates a standalone function of the network which can be run without the\r\n             * need of a library\r\n             */\r\n            standalone: function () {\r\n              var present = [];\r\n              var activations = [];\r\n              var states = [];\r\n              var lines = [];\r\n              var functions = [];\r\n\r\n              var i;\r\n              for (i = 0; i < this.input; i++) {\r\n                var node = this.nodes[i];\r\n                activations.push(node.activation);\r\n                states.push(node.state);\r\n              }\r\n\r\n              lines.push(\r\n                'for(var i = 0; i < input.length; i++) A[i] = input[i];'\r\n              );\r\n\r\n              // So we don't have to use expensive .indexOf()\r\n              for (i = 0; i < this.nodes.length; i++) {\r\n                this.nodes[i].index = i;\r\n              }\r\n\r\n              for (i = this.input; i < this.nodes.length; i++) {\r\n                let node = this.nodes[i];\r\n                activations.push(node.activation);\r\n                states.push(node.state);\r\n\r\n                var functionIndex = present.indexOf(node.squash.name);\r\n\r\n                if (functionIndex === -1) {\r\n                  functionIndex = present.length;\r\n                  present.push(node.squash.name);\r\n                  functions.push(node.squash.toString());\r\n                }\r\n\r\n                var incoming = [];\r\n                for (var j = 0; j < node.connections.in.length; j++) {\r\n                  var conn = node.connections.in[j];\r\n                  var computation = `A[${conn.from.index}] * ${conn.weight}`;\r\n\r\n                  if (conn.gater != null) {\r\n                    computation += ` * A[${conn.gater.index}]`;\r\n                  }\r\n\r\n                  incoming.push(computation);\r\n                }\r\n\r\n                if (node.connections.self.weight) {\r\n                  let conn = node.connections.self;\r\n                  let computation = `S[${i}] * ${conn.weight}`;\r\n\r\n                  if (conn.gater != null) {\r\n                    computation += ` * A[${conn.gater.index}]`;\r\n                  }\r\n\r\n                  incoming.push(computation);\r\n                }\r\n\r\n                var line1 = `S[${i}] = ${incoming.join(' + ')} + ${node.bias};`;\r\n                var line2 = `A[${i}] = F[${functionIndex}](S[${i}])${\r\n                  !node.mask ? ' * ' + node.mask : ''\r\n                };`;\r\n                lines.push(line1);\r\n                lines.push(line2);\r\n              }\r\n\r\n              var output = [];\r\n              for (\r\n                i = this.nodes.length - this.output;\r\n                i < this.nodes.length;\r\n                i++\r\n              ) {\r\n                output.push(`A[${i}]`);\r\n              }\r\n\r\n              output = `return [${output.join(',')}];`;\r\n              lines.push(output);\r\n\r\n              var total = '';\r\n              total += `var F = [${functions.toString()}];\\r\\n`;\r\n              total += `var A = [${activations.toString()}];\\r\\n`;\r\n              total += `var S = [${states.toString()}];\\r\\n`;\r\n              total += `function activate(input){\\r\\n${lines.join(\r\n                '\\r\\n'\r\n              )}\\r\\n}`;\r\n\r\n              return total;\r\n            },\r\n\r\n            /**\r\n             * Serialize to send to workers efficiently\r\n             */\r\n            serialize: function () {\r\n              var activations = [];\r\n              var states = [];\r\n              var conns = [];\r\n              var squashes = [\r\n                'LOGISTIC',\r\n                'TANH',\r\n                'IDENTITY',\r\n                'STEP',\r\n                'RELU',\r\n                'SOFTSIGN',\r\n                'SINUSOID',\r\n                'GAUSSIAN',\r\n                'BENT_IDENTITY',\r\n                'BIPOLAR',\r\n                'BIPOLAR_SIGMOID',\r\n                'HARD_TANH',\r\n                'ABSOLUTE',\r\n                'INVERSE',\r\n                'SELU',\r\n              ];\r\n\r\n              conns.push(this.input);\r\n              conns.push(this.output);\r\n\r\n              var i;\r\n              for (i = 0; i < this.nodes.length; i++) {\r\n                let node = this.nodes[i];\r\n                node.index = i;\r\n                activations.push(node.activation);\r\n                states.push(node.state);\r\n              }\r\n\r\n              for (i = this.input; i < this.nodes.length; i++) {\r\n                let node = this.nodes[i];\r\n                conns.push(node.index);\r\n                conns.push(node.bias);\r\n                conns.push(squashes.indexOf(node.squash.name));\r\n\r\n                conns.push(node.connections.self.weight);\r\n                conns.push(\r\n                  node.connections.self.gater == null\r\n                    ? -1\r\n                    : node.connections.self.gater.index\r\n                );\r\n\r\n                for (var j = 0; j < node.connections.in.length; j++) {\r\n                  let conn = node.connections.in[j];\r\n\r\n                  conns.push(conn.from.index);\r\n                  conns.push(conn.weight);\r\n                  conns.push(conn.gater == null ? -1 : conn.gater.index);\r\n                }\r\n\r\n                conns.push(-2); // stop token -> next node\r\n              }\r\n\r\n              return [activations, states, conns];\r\n            },\r\n          };\r\n\r\n          /**\r\n           * Convert a json object to a network\r\n           */\r\n          Network.fromJSON = function (json) {\r\n            var network = new Network(json.input, json.output);\r\n            network.dropout = json.dropout;\r\n            network.nodes = [];\r\n            network.connections = [];\r\n\r\n            var i;\r\n            for (i = 0; i < json.nodes.length; i++) {\r\n              network.nodes.push(Node.fromJSON(json.nodes[i]));\r\n            }\r\n\r\n            for (i = 0; i < json.connections.length; i++) {\r\n              var conn = json.connections[i];\r\n\r\n              var connection = network.connect(\r\n                network.nodes[conn.from],\r\n                network.nodes[conn.to]\r\n              )[0];\r\n              connection.weight = conn.weight;\r\n\r\n              if (conn.gater != null) {\r\n                network.gate(network.nodes[conn.gater], connection);\r\n              }\r\n            }\r\n\r\n            return network;\r\n          };\r\n\r\n          /**\r\n           * Merge two networks into one\r\n           */\r\n          Network.merge = function (network1, network2) {\r\n            // Create a copy of the networks\r\n            network1 = Network.fromJSON(network1.toJSON());\r\n            network2 = Network.fromJSON(network2.toJSON());\r\n\r\n            // Check if output and input size are the same\r\n            if (network1.output !== network2.input) {\r\n              throw new Error(\r\n                'Output size of network1 should be the same as the input size of network2!'\r\n              );\r\n            }\r\n\r\n            // Redirect all connections from network2 input from network1 output\r\n            var i;\r\n            for (i = 0; i < network2.connections.length; i++) {\r\n              let conn = network2.connections[i];\r\n              if (conn.from.type === 'input') {\r\n                let index = network2.nodes.indexOf(conn.from);\r\n\r\n                // redirect\r\n                conn.from = network1.nodes[network1.nodes.length - 1 - index];\r\n              }\r\n            }\r\n\r\n            // Delete input nodes of network2\r\n            for (i = network2.input - 1; i >= 0; i--) {\r\n              network2.nodes.splice(i, 1);\r\n            }\r\n\r\n            // Change the node type of network1's output nodes (now hidden)\r\n            for (\r\n              i = network1.nodes.length - network1.output;\r\n              i < network1.nodes.length;\r\n              i++\r\n            ) {\r\n              network1.nodes[i].type = 'hidden';\r\n            }\r\n\r\n            // Create one network from both networks\r\n            network1.connections = network1.connections.concat(\r\n              network2.connections\r\n            );\r\n            network1.nodes = network1.nodes.concat(network2.nodes);\r\n\r\n            return network1;\r\n          };\r\n\r\n          /**\r\n           * Create an offspring from two parent networks\r\n           */\r\n          Network.crossOver = function (network1, network2, equal) {\r\n            if (\r\n              network1.input !== network2.input ||\r\n              network1.output !== network2.output\r\n            ) {\r\n              throw new Error(\r\n                \"Networks don't have the same input/output size!\"\r\n              );\r\n            }\r\n\r\n            // Initialise offspring\r\n            var offspring = new Network(network1.input, network1.output);\r\n            offspring.connections = [];\r\n            offspring.nodes = [];\r\n\r\n            // Save scores and create a copy\r\n            var score1 = network1.score || 0;\r\n            var score2 = network2.score || 0;\r\n\r\n            // Determine offspring node size\r\n            var size;\r\n            if (equal || score1 === score2) {\r\n              let max = Math.max(network1.nodes.length, network2.nodes.length);\r\n              let min = Math.min(network1.nodes.length, network2.nodes.length);\r\n              size = Math.floor(Math.random() * (max - min + 1) + min);\r\n            } else if (score1 > score2) {\r\n              size = network1.nodes.length;\r\n            } else {\r\n              size = network2.nodes.length;\r\n            }\r\n\r\n            // Rename some variables for easier reading\r\n            var outputSize = network1.output;\r\n\r\n            // Set indexes so we don't need indexOf\r\n            var i;\r\n            for (i = 0; i < network1.nodes.length; i++) {\r\n              network1.nodes[i].index = i;\r\n            }\r\n\r\n            for (i = 0; i < network2.nodes.length; i++) {\r\n              network2.nodes[i].index = i;\r\n            }\r\n\r\n            // Assign nodes from parents to offspring\r\n            for (i = 0; i < size; i++) {\r\n              // Determine if an output node is needed\r\n              var node;\r\n              if (i < size - outputSize) {\r\n                let random = Math.random();\r\n                node = random >= 0.5 ? network1.nodes[i] : network2.nodes[i];\r\n                let other =\r\n                  random < 0.5 ? network1.nodes[i] : network2.nodes[i];\r\n\r\n                if (typeof node === 'undefined' || node.type === 'output') {\r\n                  node = other;\r\n                }\r\n              } else {\r\n                if (Math.random() >= 0.5) {\r\n                  node = network1.nodes[network1.nodes.length + i - size];\r\n                } else {\r\n                  node = network2.nodes[network2.nodes.length + i - size];\r\n                }\r\n              }\r\n\r\n              var newNode = new Node();\r\n              newNode.bias = node.bias;\r\n              newNode.squash = node.squash;\r\n              newNode.type = node.type;\r\n\r\n              offspring.nodes.push(newNode);\r\n            }\r\n\r\n            // Create arrays of connection genes\r\n            var n1conns = {};\r\n            var n2conns = {};\r\n\r\n            // Normal connections\r\n            for (i = 0; i < network1.connections.length; i++) {\r\n              let conn = network1.connections[i];\r\n              let data = {\r\n                weight: conn.weight,\r\n                from: conn.from.index,\r\n                to: conn.to.index,\r\n                gater: conn.gater != null ? conn.gater.index : -1,\r\n              };\r\n              n1conns[Connection.innovationID(data.from, data.to)] = data;\r\n            }\r\n\r\n            // Selfconnections\r\n            for (i = 0; i < network1.selfconns.length; i++) {\r\n              let conn = network1.selfconns[i];\r\n              let data = {\r\n                weight: conn.weight,\r\n                from: conn.from.index,\r\n                to: conn.to.index,\r\n                gater: conn.gater != null ? conn.gater.index : -1,\r\n              };\r\n              n1conns[Connection.innovationID(data.from, data.to)] = data;\r\n            }\r\n\r\n            // Normal connections\r\n            for (i = 0; i < network2.connections.length; i++) {\r\n              let conn = network2.connections[i];\r\n              let data = {\r\n                weight: conn.weight,\r\n                from: conn.from.index,\r\n                to: conn.to.index,\r\n                gater: conn.gater != null ? conn.gater.index : -1,\r\n              };\r\n              n2conns[Connection.innovationID(data.from, data.to)] = data;\r\n            }\r\n\r\n            // Selfconnections\r\n            for (i = 0; i < network2.selfconns.length; i++) {\r\n              let conn = network2.selfconns[i];\r\n              let data = {\r\n                weight: conn.weight,\r\n                from: conn.from.index,\r\n                to: conn.to.index,\r\n                gater: conn.gater != null ? conn.gater.index : -1,\r\n              };\r\n              n2conns[Connection.innovationID(data.from, data.to)] = data;\r\n            }\r\n\r\n            // Split common conn genes from disjoint or excess conn genes\r\n            var connections = [];\r\n            var keys1 = Object.keys(n1conns);\r\n            var keys2 = Object.keys(n2conns);\r\n            for (i = keys1.length - 1; i >= 0; i--) {\r\n              // Common gene\r\n              if (typeof n2conns[keys1[i]] !== 'undefined') {\r\n                let conn =\r\n                  Math.random() >= 0.5 ? n1conns[keys1[i]] : n2conns[keys1[i]];\r\n                connections.push(conn);\r\n\r\n                // Because deleting is expensive, just set it to some value\r\n                n2conns[keys1[i]] = undefined;\r\n              } else if (score1 >= score2 || equal) {\r\n                connections.push(n1conns[keys1[i]]);\r\n              }\r\n            }\r\n\r\n            // Excess/disjoint gene\r\n            if (score2 >= score1 || equal) {\r\n              for (i = 0; i < keys2.length; i++) {\r\n                if (typeof n2conns[keys2[i]] !== 'undefined') {\r\n                  connections.push(n2conns[keys2[i]]);\r\n                }\r\n              }\r\n            }\r\n\r\n            // Add common conn genes uniformly\r\n            for (i = 0; i < connections.length; i++) {\r\n              let connData = connections[i];\r\n              if (connData.to < size && connData.from < size) {\r\n                let from = offspring.nodes[connData.from];\r\n                let to = offspring.nodes[connData.to];\r\n                let conn = offspring.connect(from, to)[0];\r\n\r\n                conn.weight = connData.weight;\r\n\r\n                if (connData.gater !== -1 && connData.gater < size) {\r\n                  offspring.gate(offspring.nodes[connData.gater], conn);\r\n                }\r\n              }\r\n            }\r\n\r\n            return offspring;\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 5 */\r\n        /***/ function (module, exports, __nested_webpack_require_85573__) {\r\n          /*******************************************************************************\r\n                                MULTITHREADING\r\n*******************************************************************************/\r\n\r\n          var multi = {\r\n            /** Workers */\r\n            workers: __nested_webpack_require_85573__(19),\r\n\r\n            /** Serializes a dataset */\r\n            serializeDataSet: function (dataSet) {\r\n              var serialized = [\r\n                dataSet[0].input.length,\r\n                dataSet[0].output.length,\r\n              ];\r\n\r\n              for (var i = 0; i < dataSet.length; i++) {\r\n                var j;\r\n                for (j = 0; j < serialized[0]; j++) {\r\n                  serialized.push(dataSet[i].input[j]);\r\n                }\r\n                for (j = 0; j < serialized[1]; j++) {\r\n                  serialized.push(dataSet[i].output[j]);\r\n                }\r\n              }\r\n\r\n              return serialized;\r\n            },\r\n\r\n            /** Activate a serialized network */\r\n            activateSerializedNetwork: function (input, A, S, data, F) {\r\n              for (var i = 0; i < data[0]; i++) A[i] = input[i];\r\n              for (i = 2; i < data.length; i++) {\r\n                let index = data[i++];\r\n                let bias = data[i++];\r\n                let squash = data[i++];\r\n                let selfweight = data[i++];\r\n                let selfgater = data[i++];\r\n\r\n                S[index] =\r\n                  (selfgater === -1 ? 1 : A[selfgater]) *\r\n                    selfweight *\r\n                    S[index] +\r\n                  bias;\r\n\r\n                while (data[i] !== -2) {\r\n                  S[index] +=\r\n                    A[data[i++]] *\r\n                    data[i++] *\r\n                    (data[i++] === -1 ? 1 : A[data[i - 1]]);\r\n                }\r\n                A[index] = F[squash](S[index]);\r\n              }\r\n\r\n              var output = [];\r\n              for (i = A.length - data[1]; i < A.length; i++) output.push(A[i]);\r\n              return output;\r\n            },\r\n\r\n            /** Deserializes a dataset to an array of arrays */\r\n            deserializeDataSet: function (serializedSet) {\r\n              var set = [];\r\n\r\n              var sampleSize = serializedSet[0] + serializedSet[1];\r\n              for (\r\n                var i = 0;\r\n                i < (serializedSet.length - 2) / sampleSize;\r\n                i++\r\n              ) {\r\n                let input = [];\r\n                for (\r\n                  var j = 2 + i * sampleSize;\r\n                  j < 2 + i * sampleSize + serializedSet[0];\r\n                  j++\r\n                ) {\r\n                  input.push(serializedSet[j]);\r\n                }\r\n                let output = [];\r\n                for (\r\n                  j = 2 + i * sampleSize + serializedSet[0];\r\n                  j < 2 + i * sampleSize + sampleSize;\r\n                  j++\r\n                ) {\r\n                  output.push(serializedSet[j]);\r\n                }\r\n                set.push(input);\r\n                set.push(output);\r\n              }\r\n\r\n              return set;\r\n            },\r\n\r\n            /** A list of compiled activation functions in a certain order */\r\n            activations: [\r\n              function (x) {\r\n                return 1 / (1 + Math.exp(-x));\r\n              },\r\n              function (x) {\r\n                return Math.tanh(x);\r\n              },\r\n              function (x) {\r\n                return x;\r\n              },\r\n              function (x) {\r\n                return x > 0 ? 1 : 0;\r\n              },\r\n              function (x) {\r\n                return x > 0 ? x : 0;\r\n              },\r\n              function (x) {\r\n                return x / (1 + Math.abs(x));\r\n              },\r\n              function (x) {\r\n                return Math.sin(x);\r\n              },\r\n              function (x) {\r\n                return Math.exp(-Math.pow(x, 2));\r\n              },\r\n              function (x) {\r\n                return (Math.sqrt(Math.pow(x, 2) + 1) - 1) / 2 + x;\r\n              },\r\n              function (x) {\r\n                return x > 0 ? 1 : -1;\r\n              },\r\n              function (x) {\r\n                return 2 / (1 + Math.exp(-x)) - 1;\r\n              },\r\n              function (x) {\r\n                return Math.max(-1, Math.min(1, x));\r\n              },\r\n              function (x) {\r\n                return Math.abs(x);\r\n              },\r\n              function (x) {\r\n                return 1 - x;\r\n              },\r\n              function (x) {\r\n                var a = 1.6732632423543772848170429916717;\r\n                return (\r\n                  (x > 0 ? x : a * Math.exp(x) - a) *\r\n                  1.0507009873554804934193349852946\r\n                );\r\n              },\r\n            ],\r\n          };\r\n\r\n          multi.testSerializedSet = function (set, cost, A, S, data, F) {\r\n            // Calculate how much samples are in the set\r\n            var error = 0;\r\n            for (var i = 0; i < set.length; i += 2) {\r\n              let output = multi.activateSerializedNetwork(\r\n                set[i],\r\n                A,\r\n                S,\r\n                data,\r\n                F\r\n              );\r\n              error += cost(set[i + 1], output);\r\n            }\r\n\r\n            return error / (set.length / 2);\r\n          };\r\n\r\n          /* Export */\r\n          for (var i in multi) {\r\n            module.exports[i] = multi[i];\r\n          }\r\n\r\n          /***/\r\n        },\r\n        /* 6 */\r\n        /***/ function (module, exports, __nested_webpack_require_91146__) {\r\n          /* Export */\r\n          module.exports = Group;\r\n\r\n          /* Import */\r\n          var methods = __nested_webpack_require_91146__(0);\r\n          var config = __nested_webpack_require_91146__(1);\r\n          var Layer = __nested_webpack_require_91146__(7);\r\n          var Node = __nested_webpack_require_91146__(2);\r\n\r\n          /*******************************************************************************\r\n                                         Group\r\n*******************************************************************************/\r\n\r\n          function Group(size) {\r\n            this.nodes = [];\r\n            this.connections = {\r\n              in: [],\r\n              out: [],\r\n              self: [],\r\n            };\r\n\r\n            for (var i = 0; i < size; i++) {\r\n              this.nodes.push(new Node());\r\n            }\r\n          }\r\n\r\n          Group.prototype = {\r\n            /**\r\n             * Activates all the nodes in the group\r\n             */\r\n            activate: function (value) {\r\n              var values = [];\r\n\r\n              if (\r\n                typeof value !== 'undefined' &&\r\n                value.length !== this.nodes.length\r\n              ) {\r\n                throw new Error(\r\n                  'Array with values should be same as the amount of nodes!'\r\n                );\r\n              }\r\n\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                var activation;\r\n                if (typeof value === 'undefined') {\r\n                  activation = this.nodes[i].activate();\r\n                } else {\r\n                  activation = this.nodes[i].activate(value[i]);\r\n                }\r\n\r\n                values.push(activation);\r\n              }\r\n\r\n              return values;\r\n            },\r\n\r\n            /**\r\n             * Propagates all the node in the group\r\n             */\r\n            propagate: function (rate, momentum, target) {\r\n              if (\r\n                typeof target !== 'undefined' &&\r\n                target.length !== this.nodes.length\r\n              ) {\r\n                throw new Error(\r\n                  'Array with values should be same as the amount of nodes!'\r\n                );\r\n              }\r\n\r\n              for (var i = this.nodes.length - 1; i >= 0; i--) {\r\n                if (typeof target === 'undefined') {\r\n                  this.nodes[i].propagate(rate, momentum, true);\r\n                } else {\r\n                  this.nodes[i].propagate(rate, momentum, true, target[i]);\r\n                }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Connects the nodes in this group to nodes in another group or just a node\r\n             */\r\n            connect: function (target, method, weight) {\r\n              var connections = [];\r\n              var i, j;\r\n              if (target instanceof Group) {\r\n                if (typeof method === 'undefined') {\r\n                  if (this !== target) {\r\n                    if (config.warnings)\r\n                      console.warn(\r\n                        'No group connection specified, using ALL_TO_ALL'\r\n                      );\r\n                    method = methods.connection.ALL_TO_ALL;\r\n                  } else {\r\n                    if (config.warnings)\r\n                      console.warn(\r\n                        'No group connection specified, using ONE_TO_ONE'\r\n                      );\r\n                    method = methods.connection.ONE_TO_ONE;\r\n                  }\r\n                }\r\n                if (\r\n                  method === methods.connection.ALL_TO_ALL ||\r\n                  method === methods.connection.ALL_TO_ELSE\r\n                ) {\r\n                  for (i = 0; i < this.nodes.length; i++) {\r\n                    for (j = 0; j < target.nodes.length; j++) {\r\n                      if (\r\n                        method === methods.connection.ALL_TO_ELSE &&\r\n                        this.nodes[i] === target.nodes[j]\r\n                      )\r\n                        continue;\r\n                      let connection = this.nodes[i].connect(\r\n                        target.nodes[j],\r\n                        weight\r\n                      );\r\n                      this.connections.out.push(connection[0]);\r\n                      target.connections.in.push(connection[0]);\r\n                      connections.push(connection[0]);\r\n                    }\r\n                  }\r\n                } else if (method === methods.connection.ONE_TO_ONE) {\r\n                  if (this.nodes.length !== target.nodes.length) {\r\n                    throw new Error('From and To group must be the same size!');\r\n                  }\r\n\r\n                  for (i = 0; i < this.nodes.length; i++) {\r\n                    let connection = this.nodes[i].connect(\r\n                      target.nodes[i],\r\n                      weight\r\n                    );\r\n                    this.connections.self.push(connection[0]);\r\n                    connections.push(connection[0]);\r\n                  }\r\n                }\r\n              } else if (target instanceof Layer) {\r\n                connections = target.input(this, method, weight);\r\n              } else if (target instanceof Node) {\r\n                for (i = 0; i < this.nodes.length; i++) {\r\n                  let connection = this.nodes[i].connect(target, weight);\r\n                  this.connections.out.push(connection[0]);\r\n                  connections.push(connection[0]);\r\n                }\r\n              }\r\n\r\n              return connections;\r\n            },\r\n\r\n            /**\r\n             * Make nodes from this group gate the given connection(s)\r\n             */\r\n            gate: function (connections, method) {\r\n              if (typeof method === 'undefined') {\r\n                throw new Error('Please specify Gating.INPUT, Gating.OUTPUT');\r\n              }\r\n\r\n              if (!Array.isArray(connections)) {\r\n                connections = [connections];\r\n              }\r\n\r\n              var nodes1 = [];\r\n              var nodes2 = [];\r\n\r\n              var i, j;\r\n              for (i = 0; i < connections.length; i++) {\r\n                var connection = connections[i];\r\n                if (!nodes1.includes(connection.from))\r\n                  nodes1.push(connection.from);\r\n                if (!nodes2.includes(connection.to)) nodes2.push(connection.to);\r\n              }\r\n\r\n              switch (method) {\r\n                case methods.gating.INPUT:\r\n                  for (i = 0; i < nodes2.length; i++) {\r\n                    let node = nodes2[i];\r\n                    let gater = this.nodes[i % this.nodes.length];\r\n\r\n                    for (j = 0; j < node.connections.in.length; j++) {\r\n                      let conn = node.connections.in[j];\r\n                      if (connections.includes(conn)) {\r\n                        gater.gate(conn);\r\n                      }\r\n                    }\r\n                  }\r\n                  break;\r\n                case methods.gating.OUTPUT:\r\n                  for (i = 0; i < nodes1.length; i++) {\r\n                    let node = nodes1[i];\r\n                    let gater = this.nodes[i % this.nodes.length];\r\n\r\n                    for (j = 0; j < node.connections.out.length; j++) {\r\n                      let conn = node.connections.out[j];\r\n                      if (connections.includes(conn)) {\r\n                        gater.gate(conn);\r\n                      }\r\n                    }\r\n                  }\r\n                  break;\r\n                case methods.gating.SELF:\r\n                  for (i = 0; i < nodes1.length; i++) {\r\n                    let node = nodes1[i];\r\n                    let gater = this.nodes[i % this.nodes.length];\r\n\r\n                    if (connections.includes(node.connections.self)) {\r\n                      gater.gate(node.connections.self);\r\n                    }\r\n                  }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Sets the value of a property for every node\r\n             */\r\n            set: function (values) {\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                if (typeof values.bias !== 'undefined') {\r\n                  this.nodes[i].bias = values.bias;\r\n                }\r\n\r\n                this.nodes[i].squash = values.squash || this.nodes[i].squash;\r\n                this.nodes[i].type = values.type || this.nodes[i].type;\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Disconnects all nodes from this group from another given group/node\r\n             */\r\n            disconnect: function (target, twosided) {\r\n              twosided = twosided || false;\r\n\r\n              // In the future, disconnect will return a connection so indexOf can be used\r\n              var i, j, k;\r\n              if (target instanceof Group) {\r\n                for (i = 0; i < this.nodes.length; i++) {\r\n                  for (j = 0; j < target.nodes.length; j++) {\r\n                    this.nodes[i].disconnect(target.nodes[j], twosided);\r\n\r\n                    for (k = this.connections.out.length - 1; k >= 0; k--) {\r\n                      let conn = this.connections.out[k];\r\n\r\n                      if (\r\n                        conn.from === this.nodes[i] &&\r\n                        conn.to === target.nodes[j]\r\n                      ) {\r\n                        this.connections.out.splice(k, 1);\r\n                        break;\r\n                      }\r\n                    }\r\n\r\n                    if (twosided) {\r\n                      for (k = this.connections.in.length - 1; k >= 0; k--) {\r\n                        let conn = this.connections.in[k];\r\n\r\n                        if (\r\n                          conn.from === target.nodes[j] &&\r\n                          conn.to === this.nodes[i]\r\n                        ) {\r\n                          this.connections.in.splice(k, 1);\r\n                          break;\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              } else if (target instanceof Node) {\r\n                for (i = 0; i < this.nodes.length; i++) {\r\n                  this.nodes[i].disconnect(target, twosided);\r\n\r\n                  for (j = this.connections.out.length - 1; j >= 0; j--) {\r\n                    let conn = this.connections.out[j];\r\n\r\n                    if (conn.from === this.nodes[i] && conn.to === target) {\r\n                      this.connections.out.splice(j, 1);\r\n                      break;\r\n                    }\r\n                  }\r\n\r\n                  if (twosided) {\r\n                    for (j = this.connections.in.length - 1; j >= 0; j--) {\r\n                      var conn = this.connections.in[j];\r\n\r\n                      if (conn.from === target && conn.to === this.nodes[i]) {\r\n                        this.connections.in.splice(j, 1);\r\n                        break;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Clear the context of this group\r\n             */\r\n            clear: function () {\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                this.nodes[i].clear();\r\n              }\r\n            },\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 7 */\r\n        /***/ function (module, exports, __nested_webpack_require_102452__) {\r\n          /* Export */\r\n          module.exports = Layer;\r\n\r\n          /* Import */\r\n          var methods = __nested_webpack_require_102452__(0);\r\n          var Group = __nested_webpack_require_102452__(6);\r\n          var Node = __nested_webpack_require_102452__(2);\r\n\r\n          /*******************************************************************************\r\n                                         Group\r\n*******************************************************************************/\r\n\r\n          function Layer() {\r\n            this.output = null;\r\n\r\n            this.nodes = [];\r\n            this.connections = { in: [], out: [], self: [] };\r\n          }\r\n\r\n          Layer.prototype = {\r\n            /**\r\n             * Activates all the nodes in the group\r\n             */\r\n            activate: function (value) {\r\n              var values = [];\r\n\r\n              if (\r\n                typeof value !== 'undefined' &&\r\n                value.length !== this.nodes.length\r\n              ) {\r\n                throw new Error(\r\n                  'Array with values should be same as the amount of nodes!'\r\n                );\r\n              }\r\n\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                var activation;\r\n                if (typeof value === 'undefined') {\r\n                  activation = this.nodes[i].activate();\r\n                } else {\r\n                  activation = this.nodes[i].activate(value[i]);\r\n                }\r\n\r\n                values.push(activation);\r\n              }\r\n\r\n              return values;\r\n            },\r\n\r\n            /**\r\n             * Propagates all the node in the group\r\n             */\r\n            propagate: function (rate, momentum, target) {\r\n              if (\r\n                typeof target !== 'undefined' &&\r\n                target.length !== this.nodes.length\r\n              ) {\r\n                throw new Error(\r\n                  'Array with values should be same as the amount of nodes!'\r\n                );\r\n              }\r\n\r\n              for (var i = this.nodes.length - 1; i >= 0; i--) {\r\n                if (typeof target === 'undefined') {\r\n                  this.nodes[i].propagate(rate, momentum, true);\r\n                } else {\r\n                  this.nodes[i].propagate(rate, momentum, true, target[i]);\r\n                }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Connects the nodes in this group to nodes in another group or just a node\r\n             */\r\n            connect: function (target, method, weight) {\r\n              var connections;\r\n              if (target instanceof Group || target instanceof Node) {\r\n                connections = this.output.connect(target, method, weight);\r\n              } else if (target instanceof Layer) {\r\n                connections = target.input(this, method, weight);\r\n              }\r\n\r\n              return connections;\r\n            },\r\n\r\n            /**\r\n             * Make nodes from this group gate the given connection(s)\r\n             */\r\n            gate: function (connections, method) {\r\n              this.output.gate(connections, method);\r\n            },\r\n\r\n            /**\r\n             * Sets the value of a property for every node\r\n             */\r\n            set: function (values) {\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                var node = this.nodes[i];\r\n\r\n                if (node instanceof Node) {\r\n                  if (typeof values.bias !== 'undefined') {\r\n                    node.bias = values.bias;\r\n                  }\r\n\r\n                  node.squash = values.squash || node.squash;\r\n                  node.type = values.type || node.type;\r\n                } else if (node instanceof Group) {\r\n                  node.set(values);\r\n                }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Disconnects all nodes from this group from another given group/node\r\n             */\r\n            disconnect: function (target, twosided) {\r\n              twosided = twosided || false;\r\n\r\n              // In the future, disconnect will return a connection so indexOf can be used\r\n              var i, j, k;\r\n              if (target instanceof Group) {\r\n                for (i = 0; i < this.nodes.length; i++) {\r\n                  for (j = 0; j < target.nodes.length; j++) {\r\n                    this.nodes[i].disconnect(target.nodes[j], twosided);\r\n\r\n                    for (k = this.connections.out.length - 1; k >= 0; k--) {\r\n                      let conn = this.connections.out[k];\r\n\r\n                      if (\r\n                        conn.from === this.nodes[i] &&\r\n                        conn.to === target.nodes[j]\r\n                      ) {\r\n                        this.connections.out.splice(k, 1);\r\n                        break;\r\n                      }\r\n                    }\r\n\r\n                    if (twosided) {\r\n                      for (k = this.connections.in.length - 1; k >= 0; k--) {\r\n                        let conn = this.connections.in[k];\r\n\r\n                        if (\r\n                          conn.from === target.nodes[j] &&\r\n                          conn.to === this.nodes[i]\r\n                        ) {\r\n                          this.connections.in.splice(k, 1);\r\n                          break;\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              } else if (target instanceof Node) {\r\n                for (i = 0; i < this.nodes.length; i++) {\r\n                  this.nodes[i].disconnect(target, twosided);\r\n\r\n                  for (j = this.connections.out.length - 1; j >= 0; j--) {\r\n                    let conn = this.connections.out[j];\r\n\r\n                    if (conn.from === this.nodes[i] && conn.to === target) {\r\n                      this.connections.out.splice(j, 1);\r\n                      break;\r\n                    }\r\n                  }\r\n\r\n                  if (twosided) {\r\n                    for (k = this.connections.in.length - 1; k >= 0; k--) {\r\n                      let conn = this.connections.in[k];\r\n\r\n                      if (conn.from === target && conn.to === this.nodes[i]) {\r\n                        this.connections.in.splice(k, 1);\r\n                        break;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Clear the context of this group\r\n             */\r\n            clear: function () {\r\n              for (var i = 0; i < this.nodes.length; i++) {\r\n                this.nodes[i].clear();\r\n              }\r\n            },\r\n          };\r\n\r\n          Layer.Dense = function (size) {\r\n            // Create the layer\r\n            var layer = new Layer();\r\n\r\n            // Init required nodes (in activation order)\r\n            var block = new Group(size);\r\n\r\n            layer.nodes.push(block);\r\n            layer.output = block;\r\n\r\n            layer.input = function (from, method, weight) {\r\n              if (from instanceof Layer) from = from.output;\r\n              method = method || methods.connection.ALL_TO_ALL;\r\n              return from.connect(block, method, weight);\r\n            };\r\n\r\n            return layer;\r\n          };\r\n\r\n          Layer.LSTM = function (size) {\r\n            // Create the layer\r\n            var layer = new Layer();\r\n\r\n            // Init required nodes (in activation order)\r\n            var inputGate = new Group(size);\r\n            var forgetGate = new Group(size);\r\n            var memoryCell = new Group(size);\r\n            var outputGate = new Group(size);\r\n            var outputBlock = new Group(size);\r\n\r\n            inputGate.set({\r\n              bias: 1,\r\n            });\r\n            forgetGate.set({\r\n              bias: 1,\r\n            });\r\n            outputGate.set({\r\n              bias: 1,\r\n            });\r\n\r\n            // Set up internal connections\r\n            memoryCell.connect(inputGate, methods.connection.ALL_TO_ALL);\r\n            memoryCell.connect(forgetGate, methods.connection.ALL_TO_ALL);\r\n            memoryCell.connect(outputGate, methods.connection.ALL_TO_ALL);\r\n            var forget = memoryCell.connect(\r\n              memoryCell,\r\n              methods.connection.ONE_TO_ONE\r\n            );\r\n            var output = memoryCell.connect(\r\n              outputBlock,\r\n              methods.connection.ALL_TO_ALL\r\n            );\r\n\r\n            // Set up gates\r\n            forgetGate.gate(forget, methods.gating.SELF);\r\n            outputGate.gate(output, methods.gating.OUTPUT);\r\n\r\n            // Add to nodes array\r\n            layer.nodes = [\r\n              inputGate,\r\n              forgetGate,\r\n              memoryCell,\r\n              outputGate,\r\n              outputBlock,\r\n            ];\r\n\r\n            // Define output\r\n            layer.output = outputBlock;\r\n\r\n            layer.input = function (from, method, weight) {\r\n              if (from instanceof Layer) from = from.output;\r\n              method = method || methods.connection.ALL_TO_ALL;\r\n              var connections = [];\r\n\r\n              var input = from.connect(memoryCell, method, weight);\r\n              connections = connections.concat(input);\r\n\r\n              connections = connections.concat(\r\n                from.connect(inputGate, method, weight)\r\n              );\r\n              connections = connections.concat(\r\n                from.connect(outputGate, method, weight)\r\n              );\r\n              connections = connections.concat(\r\n                from.connect(forgetGate, method, weight)\r\n              );\r\n\r\n              inputGate.gate(input, methods.gating.INPUT);\r\n\r\n              return connections;\r\n            };\r\n\r\n            return layer;\r\n          };\r\n\r\n          Layer.GRU = function (size) {\r\n            // Create the layer\r\n            var layer = new Layer();\r\n\r\n            var updateGate = new Group(size);\r\n            var inverseUpdateGate = new Group(size);\r\n            var resetGate = new Group(size);\r\n            var memoryCell = new Group(size);\r\n            var output = new Group(size);\r\n            var previousOutput = new Group(size);\r\n\r\n            previousOutput.set({\r\n              bias: 0,\r\n              squash: methods.activation.IDENTITY,\r\n              type: 'constant',\r\n            });\r\n            memoryCell.set({\r\n              squash: methods.activation.TANH,\r\n            });\r\n            inverseUpdateGate.set({\r\n              bias: 0,\r\n              squash: methods.activation.INVERSE,\r\n              type: 'constant',\r\n            });\r\n            updateGate.set({\r\n              bias: 1,\r\n            });\r\n            resetGate.set({\r\n              bias: 0,\r\n            });\r\n\r\n            // Update gate calculation\r\n            previousOutput.connect(updateGate, methods.connection.ALL_TO_ALL);\r\n\r\n            // Inverse update gate calculation\r\n            updateGate.connect(\r\n              inverseUpdateGate,\r\n              methods.connection.ONE_TO_ONE,\r\n              1\r\n            );\r\n\r\n            // Reset gate calculation\r\n            previousOutput.connect(resetGate, methods.connection.ALL_TO_ALL);\r\n\r\n            // Memory calculation\r\n            var reset = previousOutput.connect(\r\n              memoryCell,\r\n              methods.connection.ALL_TO_ALL\r\n            );\r\n\r\n            resetGate.gate(reset, methods.gating.OUTPUT); // gate\r\n\r\n            // Output calculation\r\n            var update1 = previousOutput.connect(\r\n              output,\r\n              methods.connection.ALL_TO_ALL\r\n            );\r\n            var update2 = memoryCell.connect(\r\n              output,\r\n              methods.connection.ALL_TO_ALL\r\n            );\r\n\r\n            updateGate.gate(update1, methods.gating.OUTPUT);\r\n            inverseUpdateGate.gate(update2, methods.gating.OUTPUT);\r\n\r\n            // Previous output calculation\r\n            output.connect(previousOutput, methods.connection.ONE_TO_ONE, 1);\r\n\r\n            // Add to nodes array\r\n            layer.nodes = [\r\n              updateGate,\r\n              inverseUpdateGate,\r\n              resetGate,\r\n              memoryCell,\r\n              output,\r\n              previousOutput,\r\n            ];\r\n\r\n            layer.output = output;\r\n\r\n            layer.input = function (from, method, weight) {\r\n              if (from instanceof Layer) from = from.output;\r\n              method = method || methods.connection.ALL_TO_ALL;\r\n              var connections = [];\r\n\r\n              connections = connections.concat(\r\n                from.connect(updateGate, method, weight)\r\n              );\r\n              connections = connections.concat(\r\n                from.connect(resetGate, method, weight)\r\n              );\r\n              connections = connections.concat(\r\n                from.connect(memoryCell, method, weight)\r\n              );\r\n\r\n              return connections;\r\n            };\r\n\r\n            return layer;\r\n          };\r\n\r\n          Layer.Memory = function (size, memory) {\r\n            // Create the layer\r\n            var layer = new Layer();\r\n            // Because the output can only be one group, we have to put the nodes all in óne group\r\n\r\n            var previous = null;\r\n            var i;\r\n            for (i = 0; i < memory; i++) {\r\n              var block = new Group(size);\r\n\r\n              block.set({\r\n                squash: methods.activation.IDENTITY,\r\n                bias: 0,\r\n                type: 'constant',\r\n              });\r\n\r\n              if (previous != null) {\r\n                previous.connect(block, methods.connection.ONE_TO_ONE, 1);\r\n              }\r\n\r\n              layer.nodes.push(block);\r\n              previous = block;\r\n            }\r\n\r\n            layer.nodes.reverse();\r\n\r\n            for (i = 0; i < layer.nodes.length; i++) {\r\n              layer.nodes[i].nodes.reverse();\r\n            }\r\n\r\n            // Because output can only be óne group, fit all memory nodes in óne group\r\n            var outputGroup = new Group(0);\r\n            for (var group in layer.nodes) {\r\n              outputGroup.nodes = outputGroup.nodes.concat(\r\n                layer.nodes[group].nodes\r\n              );\r\n            }\r\n            layer.output = outputGroup;\r\n\r\n            layer.input = function (from, method, weight) {\r\n              if (from instanceof Layer) from = from.output;\r\n              method = method || methods.connection.ALL_TO_ALL;\r\n\r\n              if (\r\n                from.nodes.length !==\r\n                layer.nodes[layer.nodes.length - 1].nodes.length\r\n              ) {\r\n                throw new Error(\r\n                  'Previous layer size must be same as memory size'\r\n                );\r\n              }\r\n\r\n              return from.connect(\r\n                layer.nodes[layer.nodes.length - 1],\r\n                methods.connection.ONE_TO_ONE,\r\n                1\r\n              );\r\n            };\r\n\r\n            return layer;\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 8 */\r\n        /***/ function (module, exports) {\r\n          /*******************************************************************************\r\n                                  ACTIVATION FUNCTIONS\r\n*******************************************************************************/\r\n\r\n          // https://en.wikipedia.org/wiki/Activation_function\r\n          // https://stats.stackexchange.com/questions/115258/comprehensive-list-of-activation-functions-in-neural-networks-with-pros-cons\r\n          var activation = {\r\n            LOGISTIC: function (x, derivate) {\r\n              var fx = 1 / (1 + Math.exp(-x));\r\n              if (!derivate) return fx;\r\n              return fx * (1 - fx);\r\n            },\r\n            TANH: function (x, derivate) {\r\n              if (derivate) return 1 - Math.pow(Math.tanh(x), 2);\r\n              return Math.tanh(x);\r\n            },\r\n            IDENTITY: function (x, derivate) {\r\n              return derivate ? 1 : x;\r\n            },\r\n            STEP: function (x, derivate) {\r\n              return derivate ? 0 : x > 0 ? 1 : 0;\r\n            },\r\n            RELU: function (x, derivate) {\r\n              if (derivate) return x > 0 ? 1 : 0;\r\n              return x > 0 ? x : 0;\r\n            },\r\n            SOFTSIGN: function (x, derivate) {\r\n              var d = 1 + Math.abs(x);\r\n              if (derivate) return x / Math.pow(d, 2);\r\n              return x / d;\r\n            },\r\n            SINUSOID: function (x, derivate) {\r\n              if (derivate) return Math.cos(x);\r\n              return Math.sin(x);\r\n            },\r\n            GAUSSIAN: function (x, derivate) {\r\n              var d = Math.exp(-Math.pow(x, 2));\r\n              if (derivate) return -2 * x * d;\r\n              return d;\r\n            },\r\n            BENT_IDENTITY: function (x, derivate) {\r\n              var d = Math.sqrt(Math.pow(x, 2) + 1);\r\n              if (derivate) return x / (2 * d) + 1;\r\n              return (d - 1) / 2 + x;\r\n            },\r\n            BIPOLAR: function (x, derivate) {\r\n              return derivate ? 0 : x > 0 ? 1 : -1;\r\n            },\r\n            BIPOLAR_SIGMOID: function (x, derivate) {\r\n              var d = 2 / (1 + Math.exp(-x)) - 1;\r\n              if (derivate) return (1 / 2) * (1 + d) * (1 - d);\r\n              return d;\r\n            },\r\n            HARD_TANH: function (x, derivate) {\r\n              if (derivate) return x > -1 && x < 1 ? 1 : 0;\r\n              return Math.max(-1, Math.min(1, x));\r\n            },\r\n            ABSOLUTE: function (x, derivate) {\r\n              if (derivate) return x < 0 ? -1 : 1;\r\n              return Math.abs(x);\r\n            },\r\n            INVERSE: function (x, derivate) {\r\n              if (derivate) return -1;\r\n              return 1 - x;\r\n            },\r\n            // https://arxiv.org/pdf/1706.02515.pdf\r\n            SELU: function (x, derivate) {\r\n              var alpha = 1.6732632423543772848170429916717;\r\n              var scale = 1.0507009873554804934193349852946;\r\n              var fx = x > 0 ? x : alpha * Math.exp(x) - alpha;\r\n              if (derivate) {\r\n                return x > 0 ? scale : (fx + alpha) * scale;\r\n              }\r\n              return fx * scale;\r\n            },\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = activation;\r\n\r\n          /***/\r\n        },\r\n        /* 9 */\r\n        /***/ function (module, exports, __nested_webpack_require_120791__) {\r\n          /* Export */\r\n          module.exports = Neat;\r\n\r\n          /* Import */\r\n          var Network = __nested_webpack_require_120791__(4);\r\n          var methods = __nested_webpack_require_120791__(0);\r\n          var config = __nested_webpack_require_120791__(1);\r\n\r\n          /* Easier variable naming */\r\n          var selection = methods.selection;\r\n\r\n          /*******************************************************************************\r\n                                         NEAT\r\n*******************************************************************************/\r\n\r\n          function Neat(input, output, fitness, options) {\r\n            this.input = input; // The input size of the networks\r\n            this.output = output; // The output size of the networks\r\n            this.fitness = fitness; // The fitness function to evaluate the networks\r\n\r\n            // Configure options\r\n            options = options || {};\r\n            this.equal = options.equal || false;\r\n            this.clear = options.clear || false;\r\n            this.popsize = options.popsize || 50;\r\n            this.elitism = options.elitism || 0;\r\n            this.provenance = options.provenance || 0;\r\n            this.mutationRate = options.mutationRate || 0.3;\r\n            this.mutationAmount = options.mutationAmount || 1;\r\n\r\n            this.fitnessPopulation = options.fitnessPopulation || false;\r\n\r\n            this.selection = options.selection || methods.selection.POWER;\r\n            this.crossover = options.crossover || [\r\n              methods.crossover.SINGLE_POINT,\r\n              methods.crossover.TWO_POINT,\r\n              methods.crossover.UNIFORM,\r\n              methods.crossover.AVERAGE,\r\n            ];\r\n            this.mutation = options.mutation || methods.mutation.FFW;\r\n\r\n            this.template = options.network || false;\r\n\r\n            this.maxNodes = options.maxNodes || Infinity;\r\n            this.maxConns = options.maxConns || Infinity;\r\n            this.maxGates = options.maxGates || Infinity;\r\n\r\n            // Custom mutation selection function if given\r\n            this.selectMutationMethod =\r\n              typeof options.mutationSelection === 'function'\r\n                ? options.mutationSelection.bind(this)\r\n                : this.selectMutationMethod;\r\n\r\n            // Generation counter\r\n            this.generation = 0;\r\n\r\n            // Initialise the genomes\r\n            this.createPool(this.template);\r\n          }\r\n\r\n          Neat.prototype = {\r\n            /**\r\n             * Create the initial pool of genomes\r\n             */\r\n            createPool: function (network) {\r\n              this.population = [];\r\n\r\n              for (var i = 0; i < this.popsize; i++) {\r\n                var copy;\r\n                if (this.template) {\r\n                  copy = Network.fromJSON(network.toJSON());\r\n                } else {\r\n                  copy = new Network(this.input, this.output);\r\n                }\r\n                copy.score = undefined;\r\n                this.population.push(copy);\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Evaluates, selects, breeds and mutates population\r\n             */\r\n            evolve: async function () {\r\n              // Check if evaluated, sort the population\r\n              if (\r\n                typeof this.population[this.population.length - 1].score ===\r\n                'undefined'\r\n              ) {\r\n                await this.evaluate();\r\n              }\r\n              this.sort();\r\n\r\n              var fittest = Network.fromJSON(this.population[0].toJSON());\r\n              fittest.score = this.population[0].score;\r\n\r\n              var newPopulation = [];\r\n\r\n              // Elitism\r\n              var elitists = [];\r\n              for (var i = 0; i < this.elitism; i++) {\r\n                elitists.push(this.population[i]);\r\n              }\r\n\r\n              // Provenance\r\n              for (i = 0; i < this.provenance; i++) {\r\n                newPopulation.push(Network.fromJSON(this.template.toJSON()));\r\n              }\r\n\r\n              // Breed the next individuals\r\n              for (\r\n                i = 0;\r\n                i < this.popsize - this.elitism - this.provenance;\r\n                i++\r\n              ) {\r\n                newPopulation.push(this.getOffspring());\r\n              }\r\n\r\n              // Replace the old population with the new population\r\n              this.population = newPopulation;\r\n              this.mutate();\r\n\r\n              this.population.push(...elitists);\r\n\r\n              // Reset the scores\r\n              for (i = 0; i < this.population.length; i++) {\r\n                this.population[i].score = undefined;\r\n              }\r\n\r\n              this.generation++;\r\n\r\n              return fittest;\r\n            },\r\n\r\n            /**\r\n             * Breeds two parents into an offspring, population MUST be surted\r\n             */\r\n            getOffspring: function () {\r\n              var parent1 = this.getParent();\r\n              var parent2 = this.getParent();\r\n\r\n              return Network.crossOver(parent1, parent2, this.equal);\r\n            },\r\n\r\n            /**\r\n             * Selects a random mutation method for a genome according to the parameters\r\n             */\r\n            selectMutationMethod: function (genome) {\r\n              var mutationMethod =\r\n                this.mutation[Math.floor(Math.random() * this.mutation.length)];\r\n\r\n              if (\r\n                mutationMethod === methods.mutation.ADD_NODE &&\r\n                genome.nodes.length >= this.maxNodes\r\n              ) {\r\n                if (config.warnings) console.warn('maxNodes exceeded!');\r\n                return;\r\n              }\r\n\r\n              if (\r\n                mutationMethod === methods.mutation.ADD_CONN &&\r\n                genome.connections.length >= this.maxConns\r\n              ) {\r\n                if (config.warnings) console.warn('maxConns exceeded!');\r\n                return;\r\n              }\r\n\r\n              if (\r\n                mutationMethod === methods.mutation.ADD_GATE &&\r\n                genome.gates.length >= this.maxGates\r\n              ) {\r\n                if (config.warnings) console.warn('maxGates exceeded!');\r\n                return;\r\n              }\r\n\r\n              return mutationMethod;\r\n            },\r\n\r\n            /**\r\n             * Mutates the given (or current) population\r\n             */\r\n            mutate: function () {\r\n              // Elitist genomes should not be included\r\n              for (var i = 0; i < this.population.length; i++) {\r\n                if (Math.random() <= this.mutationRate) {\r\n                  for (var j = 0; j < this.mutationAmount; j++) {\r\n                    var mutationMethod = this.selectMutationMethod(\r\n                      this.population[i]\r\n                    );\r\n                    this.population[i].mutate(mutationMethod);\r\n                  }\r\n                }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Evaluates the current population\r\n             */\r\n            evaluate: async function () {\r\n              var i;\r\n              if (this.fitnessPopulation) {\r\n                if (this.clear) {\r\n                  for (i = 0; i < this.population.length; i++) {\r\n                    this.population[i].clear();\r\n                  }\r\n                }\r\n                await this.fitness(this.population);\r\n              } else {\r\n                for (i = 0; i < this.population.length; i++) {\r\n                  var genome = this.population[i];\r\n                  if (this.clear) genome.clear();\r\n                  genome.score = await this.fitness(genome);\r\n                }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Sorts the population by score\r\n             */\r\n            sort: function () {\r\n              this.population.sort(function (a, b) {\r\n                return b.score - a.score;\r\n              });\r\n            },\r\n\r\n            /**\r\n             * Returns the fittest genome of the current population\r\n             */\r\n            getFittest: function () {\r\n              // Check if evaluated\r\n              if (\r\n                typeof this.population[this.population.length - 1].score ===\r\n                'undefined'\r\n              ) {\r\n                this.evaluate();\r\n              }\r\n              if (this.population[0].score < this.population[1].score) {\r\n                this.sort();\r\n              }\r\n\r\n              return this.population[0];\r\n            },\r\n\r\n            /**\r\n             * Returns the average fitness of the current population\r\n             */\r\n            getAverage: function () {\r\n              if (\r\n                typeof this.population[this.population.length - 1].score ===\r\n                'undefined'\r\n              ) {\r\n                this.evaluate();\r\n              }\r\n\r\n              var score = 0;\r\n              for (var i = 0; i < this.population.length; i++) {\r\n                score += this.population[i].score;\r\n              }\r\n\r\n              return score / this.population.length;\r\n            },\r\n\r\n            /**\r\n             * Gets a genome based on the selection function\r\n             * @return {Network} genome\r\n             */\r\n            getParent: function () {\r\n              var i;\r\n              switch (this.selection) {\r\n                case selection.POWER:\r\n                  if (this.population[0].score < this.population[1].score)\r\n                    this.sort();\r\n\r\n                  var index = Math.floor(\r\n                    Math.pow(Math.random(), this.selection.power) *\r\n                      this.population.length\r\n                  );\r\n                  return this.population[index];\r\n                case selection.FITNESS_PROPORTIONATE:\r\n                  // As negative fitnesses are possible\r\n                  // https://stackoverflow.com/questions/16186686/genetic-algorithm-handling-negative-fitness-values\r\n                  // this is unnecessarily run for every individual, should be changed\r\n\r\n                  var totalFitness = 0;\r\n                  var minimalFitness = 0;\r\n                  for (i = 0; i < this.population.length; i++) {\r\n                    var score = this.population[i].score;\r\n                    minimalFitness =\r\n                      score < minimalFitness ? score : minimalFitness;\r\n                    totalFitness += score;\r\n                  }\r\n\r\n                  minimalFitness = Math.abs(minimalFitness);\r\n                  totalFitness += minimalFitness * this.population.length;\r\n\r\n                  var random = Math.random() * totalFitness;\r\n                  var value = 0;\r\n\r\n                  for (i = 0; i < this.population.length; i++) {\r\n                    let genome = this.population[i];\r\n                    value += genome.score + minimalFitness;\r\n                    if (random < value) return genome;\r\n                  }\r\n\r\n                  // if all scores equal, return random genome\r\n                  return this.population[\r\n                    Math.floor(Math.random() * this.population.length)\r\n                  ];\r\n                case selection.TOURNAMENT:\r\n                  if (this.selection.size > this.popsize) {\r\n                    throw new Error(\r\n                      'Your tournament size should be lower than the population size, please change methods.selection.TOURNAMENT.size'\r\n                    );\r\n                  }\r\n\r\n                  // Create a tournament\r\n                  var individuals = [];\r\n                  for (i = 0; i < this.selection.size; i++) {\r\n                    let random =\r\n                      this.population[\r\n                        Math.floor(Math.random() * this.population.length)\r\n                      ];\r\n                    individuals.push(random);\r\n                  }\r\n\r\n                  // Sort the tournament individuals by score\r\n                  individuals.sort(function (a, b) {\r\n                    return b.score - a.score;\r\n                  });\r\n\r\n                  // Select an individual\r\n                  for (i = 0; i < this.selection.size; i++) {\r\n                    if (\r\n                      Math.random() < this.selection.probability ||\r\n                      i === this.selection.size - 1\r\n                    ) {\r\n                      return individuals[i];\r\n                    }\r\n                  }\r\n              }\r\n            },\r\n\r\n            /**\r\n             * Export the current population to a json object\r\n             */\r\n            export: function () {\r\n              var json = [];\r\n              for (var i = 0; i < this.population.length; i++) {\r\n                var genome = this.population[i];\r\n                json.push(genome.toJSON());\r\n              }\r\n\r\n              return json;\r\n            },\r\n\r\n            /**\r\n             * Import population from a json object\r\n             */\r\n            import: function (json) {\r\n              var population = [];\r\n              for (var i = 0; i < json.length; i++) {\r\n                var genome = json[i];\r\n                population.push(Network.fromJSON(genome));\r\n              }\r\n              this.population = population;\r\n              this.popsize = population.length;\r\n            },\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 10 */\r\n        /***/ function (module, exports, __nested_webpack_require_134145__) {\r\n          var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\r\n          var Neataptic = {\r\n            methods: __nested_webpack_require_134145__(0),\r\n            Connection: __nested_webpack_require_134145__(3),\r\n            architect: __nested_webpack_require_134145__(18),\r\n            Network: __nested_webpack_require_134145__(4),\r\n            config: __nested_webpack_require_134145__(1),\r\n            Group: __nested_webpack_require_134145__(6),\r\n            Layer: __nested_webpack_require_134145__(7),\r\n            Node: __nested_webpack_require_134145__(2),\r\n            Neat: __nested_webpack_require_134145__(9),\r\n            multi: __nested_webpack_require_134145__(5),\r\n          };\r\n\r\n          // CommonJS & AMD\r\n          if (true) {\r\n            !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),\r\n            (__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n              return Neataptic;\r\n            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),\r\n            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&\r\n              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n          }\r\n\r\n          // Node.js\r\n          if (typeof module !== 'undefined' && module.exports) {\r\n            module.exports = Neataptic;\r\n          }\r\n\r\n          // Browser\r\n          if (typeof window === 'object') {\r\n            (function () {\r\n              var old = window['neataptic'];\r\n              Neataptic.ninja = function () {\r\n                window['neataptic'] = old;\r\n                return Neataptic;\r\n              };\r\n            })();\r\n\r\n            window['neataptic'] = Neataptic;\r\n          }\r\n\r\n          /***/\r\n        },\r\n        /* 11 */\r\n        /***/ function (module, exports, __nested_webpack_require_135742__) {\r\n          /* Import */\r\n          var activation = __nested_webpack_require_135742__(8);\r\n\r\n          /*******************************************************************************\r\n                                      MUTATION\r\n*******************************************************************************/\r\n\r\n          // https://en.wikipedia.org/wiki/mutation_(genetic_algorithm)\r\n          var mutation = {\r\n            ADD_NODE: {\r\n              name: 'ADD_NODE',\r\n            },\r\n            SUB_NODE: {\r\n              name: 'SUB_NODE',\r\n              keep_gates: true,\r\n            },\r\n            ADD_CONN: {\r\n              name: 'ADD_CONN',\r\n            },\r\n            SUB_CONN: {\r\n              name: 'REMOVE_CONN',\r\n            },\r\n            MOD_WEIGHT: {\r\n              name: 'MOD_WEIGHT',\r\n              min: -1,\r\n              max: 1,\r\n            },\r\n            MOD_BIAS: {\r\n              name: 'MOD_BIAS',\r\n              min: -1,\r\n              max: 1,\r\n            },\r\n            MOD_ACTIVATION: {\r\n              name: 'MOD_ACTIVATION',\r\n              mutateOutput: true,\r\n              allowed: [\r\n                activation.LOGISTIC,\r\n                activation.TANH,\r\n                activation.RELU,\r\n                activation.IDENTITY,\r\n                activation.STEP,\r\n                activation.SOFTSIGN,\r\n                activation.SINUSOID,\r\n                activation.GAUSSIAN,\r\n                activation.BENT_IDENTITY,\r\n                activation.BIPOLAR,\r\n                activation.BIPOLAR_SIGMOID,\r\n                activation.HARD_TANH,\r\n                activation.ABSOLUTE,\r\n                activation.INVERSE,\r\n                activation.SELU,\r\n              ],\r\n            },\r\n            ADD_SELF_CONN: {\r\n              name: 'ADD_SELF_CONN',\r\n            },\r\n            SUB_SELF_CONN: {\r\n              name: 'SUB_SELF_CONN',\r\n            },\r\n            ADD_GATE: {\r\n              name: 'ADD_GATE',\r\n            },\r\n            SUB_GATE: {\r\n              name: 'SUB_GATE',\r\n            },\r\n            ADD_BACK_CONN: {\r\n              name: 'ADD_BACK_CONN',\r\n            },\r\n            SUB_BACK_CONN: {\r\n              name: 'SUB_BACK_CONN',\r\n            },\r\n            SWAP_NODES: {\r\n              name: 'SWAP_NODES',\r\n              mutateOutput: true,\r\n            },\r\n          };\r\n\r\n          mutation.ALL = [\r\n            mutation.ADD_NODE,\r\n            mutation.SUB_NODE,\r\n            mutation.ADD_CONN,\r\n            mutation.SUB_CONN,\r\n            mutation.MOD_WEIGHT,\r\n            mutation.MOD_BIAS,\r\n            mutation.MOD_ACTIVATION,\r\n            mutation.ADD_GATE,\r\n            mutation.SUB_GATE,\r\n            mutation.ADD_SELF_CONN,\r\n            mutation.SUB_SELF_CONN,\r\n            mutation.ADD_BACK_CONN,\r\n            mutation.SUB_BACK_CONN,\r\n            mutation.SWAP_NODES,\r\n          ];\r\n\r\n          mutation.FFW = [\r\n            mutation.ADD_NODE,\r\n            mutation.SUB_NODE,\r\n            mutation.ADD_CONN,\r\n            mutation.SUB_CONN,\r\n            mutation.MOD_WEIGHT,\r\n            mutation.MOD_BIAS,\r\n            mutation.MOD_ACTIVATION,\r\n            mutation.SWAP_NODES,\r\n          ];\r\n\r\n          /* Export */\r\n          module.exports = mutation;\r\n\r\n          /***/\r\n        },\r\n        /* 12 */\r\n        /***/ function (module, exports) {\r\n          /*******************************************************************************\r\n                                      SELECTION\r\n*******************************************************************************/\r\n\r\n          // https://en.wikipedia.org/wiki/Selection_(genetic_algorithm)\r\n\r\n          var selection = {\r\n            FITNESS_PROPORTIONATE: {\r\n              name: 'FITNESS_PROPORTIONATE',\r\n            },\r\n            POWER: {\r\n              name: 'POWER',\r\n              power: 4,\r\n            },\r\n            TOURNAMENT: {\r\n              name: 'TOURNAMENT',\r\n              size: 5,\r\n              probability: 0.5,\r\n            },\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = selection;\r\n\r\n          /***/\r\n        },\r\n        /* 13 */\r\n        /***/ function (module, exports) {\r\n          /*******************************************************************************\r\n                                      CROSSOVER\r\n*******************************************************************************/\r\n\r\n          // https://en.wikipedia.org/wiki/Crossover_(genetic_algorithm)\r\n          var crossover = {\r\n            SINGLE_POINT: {\r\n              name: 'SINGLE_POINT',\r\n              config: [0.4],\r\n            },\r\n            TWO_POINT: {\r\n              name: 'TWO_POINT',\r\n              config: [0.4, 0.9],\r\n            },\r\n            UNIFORM: {\r\n              name: 'UNIFORM',\r\n            },\r\n            AVERAGE: {\r\n              name: 'AVERAGE',\r\n            },\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = crossover;\r\n\r\n          /***/\r\n        },\r\n        /* 14 */\r\n        /***/ function (module, exports) {\r\n          /*******************************************************************************\r\n                                    COST FUNCTIONS\r\n*******************************************************************************/\r\n\r\n          // https://en.wikipedia.org/wiki/Loss_function\r\n          var cost = {\r\n            // Cross entropy error\r\n            CROSS_ENTROPY: function (target, output) {\r\n              var error = 0;\r\n              for (var i = 0; i < output.length; i++) {\r\n                // Avoid negative and zero numbers, use 1e-15 http://bit.ly/2p5W29A\r\n                error -=\r\n                  target[i] * Math.log(Math.max(output[i], 1e-15)) +\r\n                  (1 - target[i]) * Math.log(1 - Math.max(output[i], 1e-15));\r\n              }\r\n              return error / output.length;\r\n            },\r\n            // Mean Squared Error\r\n            MSE: function (target, output) {\r\n              var error = 0;\r\n              for (var i = 0; i < output.length; i++) {\r\n                error += Math.pow(target[i] - output[i], 2);\r\n              }\r\n\r\n              return error / output.length;\r\n            },\r\n            // Binary error\r\n            BINARY: function (target, output) {\r\n              var misses = 0;\r\n              for (var i = 0; i < output.length; i++) {\r\n                misses +=\r\n                  Math.round(target[i] * 2) !== Math.round(output[i] * 2);\r\n              }\r\n\r\n              return misses;\r\n            },\r\n            // Mean Absolute Error\r\n            MAE: function (target, output) {\r\n              var error = 0;\r\n              for (var i = 0; i < output.length; i++) {\r\n                error += Math.abs(target[i] - output[i]);\r\n              }\r\n\r\n              return error / output.length;\r\n            },\r\n            // Mean Absolute Percentage Error\r\n            MAPE: function (target, output) {\r\n              var error = 0;\r\n              for (var i = 0; i < output.length; i++) {\r\n                error += Math.abs(\r\n                  (output[i] - target[i]) / Math.max(target[i], 1e-15)\r\n                );\r\n              }\r\n\r\n              return error / output.length;\r\n            },\r\n            // Mean Squared Logarithmic Error\r\n            MSLE: function (target, output) {\r\n              var error = 0;\r\n              for (var i = 0; i < output.length; i++) {\r\n                error +=\r\n                  Math.log(Math.max(target[i], 1e-15)) -\r\n                  Math.log(Math.max(output[i], 1e-15));\r\n              }\r\n\r\n              return error;\r\n            },\r\n            // Hinge loss, for classifiers\r\n            HINGE: function (target, output) {\r\n              var error = 0;\r\n              for (var i = 0; i < output.length; i++) {\r\n                error += Math.max(0, 1 - target[i] * output[i]);\r\n              }\r\n\r\n              return error;\r\n            },\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = cost;\r\n\r\n          /***/\r\n        },\r\n        /* 15 */\r\n        /***/ function (module, exports) {\r\n          /*******************************************************************************\r\n                                    GATING\r\n*******************************************************************************/\r\n\r\n          // Specifies how to gate a connection between two groups of multiple neurons\r\n          var gating = {\r\n            OUTPUT: {\r\n              name: 'OUTPUT',\r\n            },\r\n            INPUT: {\r\n              name: 'INPUT',\r\n            },\r\n            SELF: {\r\n              name: 'SELF',\r\n            },\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = gating;\r\n\r\n          /***/\r\n        },\r\n        /* 16 */\r\n        /***/ function (module, exports) {\r\n          /*******************************************************************************\r\n                                    CONNECTION\r\n*******************************************************************************/\r\n\r\n          // Specifies in what manner two groups are connected\r\n          var connection = {\r\n            ALL_TO_ALL: {\r\n              name: 'OUTPUT',\r\n            },\r\n            ALL_TO_ELSE: {\r\n              name: 'INPUT',\r\n            },\r\n            ONE_TO_ONE: {\r\n              name: 'SELF',\r\n            },\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = connection;\r\n\r\n          /***/\r\n        },\r\n        /* 17 */\r\n        /***/ function (module, exports) {\r\n          /*******************************************************************************\r\n                                      RATE\r\n*******************************************************************************/\r\n\r\n          // https://stackoverflow.com/questions/30033096/what-is-lr-policy-in-caffe/30045244\r\n          var rate = {\r\n            FIXED: function () {\r\n              var func = function (baseRate, iteration) {\r\n                return baseRate;\r\n              };\r\n              return func;\r\n            },\r\n            STEP: function (gamma, stepSize) {\r\n              gamma = gamma || 0.9;\r\n              stepSize = stepSize || 100;\r\n\r\n              var func = function (baseRate, iteration) {\r\n                return (\r\n                  baseRate * Math.pow(gamma, Math.floor(iteration / stepSize))\r\n                );\r\n              };\r\n\r\n              return func;\r\n            },\r\n            EXP: function (gamma) {\r\n              gamma = gamma || 0.999;\r\n\r\n              var func = function (baseRate, iteration) {\r\n                return baseRate * Math.pow(gamma, iteration);\r\n              };\r\n\r\n              return func;\r\n            },\r\n            INV: function (gamma, power) {\r\n              gamma = gamma || 0.001;\r\n              power = power || 2;\r\n\r\n              var func = function (baseRate, iteration) {\r\n                return baseRate * Math.pow(1 + gamma * iteration, -power);\r\n              };\r\n\r\n              return func;\r\n            },\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = rate;\r\n\r\n          /***/\r\n        },\r\n        /* 18 */\r\n        /***/ function (module, exports, __nested_webpack_require_146876__) {\r\n          /* Import */\r\n          var methods = __nested_webpack_require_146876__(0);\r\n          var Network = __nested_webpack_require_146876__(4);\r\n          var Group = __nested_webpack_require_146876__(6);\r\n          var Layer = __nested_webpack_require_146876__(7);\r\n          var Node = __nested_webpack_require_146876__(2);\r\n\r\n          /*******************************************************************************\r\n                                        architect\r\n*******************************************************************************/\r\n\r\n          var architect = {\r\n            /**\r\n             * Constructs a network from a given array of connected nodes\r\n             */\r\n            Construct: function (list) {\r\n              // Create a network\r\n              var network = new Network(0, 0);\r\n\r\n              // Transform all groups into nodes\r\n              var nodes = [];\r\n\r\n              var i;\r\n              for (i = 0; i < list.length; i++) {\r\n                let j;\r\n                if (list[i] instanceof Group) {\r\n                  for (j = 0; j < list[i].nodes.length; j++) {\r\n                    nodes.push(list[i].nodes[j]);\r\n                  }\r\n                } else if (list[i] instanceof Layer) {\r\n                  for (j = 0; j < list[i].nodes.length; j++) {\r\n                    for (var k = 0; k < list[i].nodes[j].nodes.length; k++) {\r\n                      nodes.push(list[i].nodes[j].nodes[k]);\r\n                    }\r\n                  }\r\n                } else if (list[i] instanceof Node) {\r\n                  nodes.push(list[i]);\r\n                }\r\n              }\r\n\r\n              // Determine input and output nodes\r\n              var inputs = [];\r\n              var outputs = [];\r\n              for (i = nodes.length - 1; i >= 0; i--) {\r\n                if (\r\n                  nodes[i].type === 'output' ||\r\n                  nodes[i].connections.out.length +\r\n                    nodes[i].connections.gated.length ===\r\n                    0\r\n                ) {\r\n                  nodes[i].type = 'output';\r\n                  network.output++;\r\n                  outputs.push(nodes[i]);\r\n                  nodes.splice(i, 1);\r\n                } else if (\r\n                  nodes[i].type === 'input' ||\r\n                  !nodes[i].connections.in.length\r\n                ) {\r\n                  nodes[i].type = 'input';\r\n                  network.input++;\r\n                  inputs.push(nodes[i]);\r\n                  nodes.splice(i, 1);\r\n                }\r\n              }\r\n\r\n              // Input nodes are always first, output nodes are always last\r\n              nodes = inputs.concat(nodes).concat(outputs);\r\n\r\n              if (network.input === 0 || network.output === 0) {\r\n                throw new Error('Given nodes have no clear input/output node!');\r\n              }\r\n\r\n              for (i = 0; i < nodes.length; i++) {\r\n                let j;\r\n                for (j = 0; j < nodes[i].connections.out.length; j++) {\r\n                  network.connections.push(nodes[i].connections.out[j]);\r\n                }\r\n                for (j = 0; j < nodes[i].connections.gated.length; j++) {\r\n                  network.gates.push(nodes[i].connections.gated[j]);\r\n                }\r\n                if (nodes[i].connections.self.weight !== 0) {\r\n                  network.selfconns.push(nodes[i].connections.self);\r\n                }\r\n              }\r\n\r\n              network.nodes = nodes;\r\n\r\n              return network;\r\n            },\r\n\r\n            /**\r\n             * Creates a multilayer perceptron (MLP)\r\n             */\r\n            Perceptron: function () {\r\n              // Convert arguments to Array\r\n              var layers = Array.prototype.slice.call(arguments);\r\n              if (layers.length < 3) {\r\n                throw new Error('You have to specify at least 3 layers');\r\n              }\r\n\r\n              // Create a list of nodes/groups\r\n              var nodes = [];\r\n              nodes.push(new Group(layers[0]));\r\n\r\n              for (var i = 1; i < layers.length; i++) {\r\n                var layer = layers[i];\r\n                layer = new Group(layer);\r\n                nodes.push(layer);\r\n                nodes[i - 1].connect(nodes[i], methods.connection.ALL_TO_ALL);\r\n              }\r\n\r\n              // Construct the network\r\n              return architect.Construct(nodes);\r\n            },\r\n\r\n            /**\r\n             * Creates a randomly connected network\r\n             */\r\n            Random: function (input, hidden, output, options) {\r\n              options = options || {};\r\n\r\n              var connections = options.connections || hidden * 2;\r\n              var backconnections = options.backconnections || 0;\r\n              var selfconnections = options.selfconnections || 0;\r\n              var gates = options.gates || 0;\r\n\r\n              var network = new Network(input, output);\r\n\r\n              var i;\r\n              for (i = 0; i < hidden; i++) {\r\n                network.mutate(methods.mutation.ADD_NODE);\r\n              }\r\n\r\n              for (i = 0; i < connections - hidden; i++) {\r\n                network.mutate(methods.mutation.ADD_CONN);\r\n              }\r\n\r\n              for (i = 0; i < backconnections; i++) {\r\n                network.mutate(methods.mutation.ADD_BACK_CONN);\r\n              }\r\n\r\n              for (i = 0; i < selfconnections; i++) {\r\n                network.mutate(methods.mutation.ADD_SELF_CONN);\r\n              }\r\n\r\n              for (i = 0; i < gates; i++) {\r\n                network.mutate(methods.mutation.ADD_GATE);\r\n              }\r\n\r\n              return network;\r\n            },\r\n\r\n            /**\r\n             * Creates a long short-term memory network\r\n             */\r\n            LSTM: function () {\r\n              var args = Array.prototype.slice.call(arguments);\r\n              if (args.length < 3) {\r\n                throw new Error('You have to specify at least 3 layers');\r\n              }\r\n\r\n              var last = args.pop();\r\n\r\n              var outputLayer;\r\n              if (typeof last === 'number') {\r\n                outputLayer = new Group(last);\r\n                last = {};\r\n              } else {\r\n                outputLayer = new Group(args.pop()); // last argument\r\n              }\r\n\r\n              outputLayer.set({\r\n                type: 'output',\r\n              });\r\n\r\n              var options = {};\r\n              options.memoryToMemory = last.memoryToMemory || false;\r\n              options.outputToMemory = last.outputToMemory || false;\r\n              options.outputToGates = last.outputToGates || false;\r\n              options.inputToOutput =\r\n                last.inputToOutput === undefined ? true : last.inputToOutput;\r\n              options.inputToDeep =\r\n                last.inputToDeep === undefined ? true : last.inputToDeep;\r\n\r\n              var inputLayer = new Group(args.shift()); // first argument\r\n              inputLayer.set({\r\n                type: 'input',\r\n              });\r\n\r\n              var blocks = args; // all the arguments in the middle\r\n\r\n              var nodes = [];\r\n              nodes.push(inputLayer);\r\n\r\n              var previous = inputLayer;\r\n              for (var i = 0; i < blocks.length; i++) {\r\n                var block = blocks[i];\r\n\r\n                // Init required nodes (in activation order)\r\n                var inputGate = new Group(block);\r\n                var forgetGate = new Group(block);\r\n                var memoryCell = new Group(block);\r\n                var outputGate = new Group(block);\r\n                var outputBlock =\r\n                  i === blocks.length - 1 ? outputLayer : new Group(block);\r\n\r\n                inputGate.set({\r\n                  bias: 1,\r\n                });\r\n                forgetGate.set({\r\n                  bias: 1,\r\n                });\r\n                outputGate.set({\r\n                  bias: 1,\r\n                });\r\n\r\n                // Connect the input with all the nodes\r\n                var input = previous.connect(\r\n                  memoryCell,\r\n                  methods.connection.ALL_TO_ALL\r\n                );\r\n                previous.connect(inputGate, methods.connection.ALL_TO_ALL);\r\n                previous.connect(outputGate, methods.connection.ALL_TO_ALL);\r\n                previous.connect(forgetGate, methods.connection.ALL_TO_ALL);\r\n\r\n                // Set up internal connections\r\n                memoryCell.connect(inputGate, methods.connection.ALL_TO_ALL);\r\n                memoryCell.connect(forgetGate, methods.connection.ALL_TO_ALL);\r\n                memoryCell.connect(outputGate, methods.connection.ALL_TO_ALL);\r\n                var forget = memoryCell.connect(\r\n                  memoryCell,\r\n                  methods.connection.ONE_TO_ONE\r\n                );\r\n                var output = memoryCell.connect(\r\n                  outputBlock,\r\n                  methods.connection.ALL_TO_ALL\r\n                );\r\n\r\n                // Set up gates\r\n                inputGate.gate(input, methods.gating.INPUT);\r\n                forgetGate.gate(forget, methods.gating.SELF);\r\n                outputGate.gate(output, methods.gating.OUTPUT);\r\n\r\n                // Input to all memory cells\r\n                if (options.inputToDeep && i > 0) {\r\n                  let input = inputLayer.connect(\r\n                    memoryCell,\r\n                    methods.connection.ALL_TO_ALL\r\n                  );\r\n                  inputGate.gate(input, methods.gating.INPUT);\r\n                }\r\n\r\n                // Optional connections\r\n                if (options.memoryToMemory) {\r\n                  let input = memoryCell.connect(\r\n                    memoryCell,\r\n                    methods.connection.ALL_TO_ELSE\r\n                  );\r\n                  inputGate.gate(input, methods.gating.INPUT);\r\n                }\r\n\r\n                if (options.outputToMemory) {\r\n                  let input = outputLayer.connect(\r\n                    memoryCell,\r\n                    methods.connection.ALL_TO_ALL\r\n                  );\r\n                  inputGate.gate(input, methods.gating.INPUT);\r\n                }\r\n\r\n                if (options.outputToGates) {\r\n                  outputLayer.connect(inputGate, methods.connection.ALL_TO_ALL);\r\n                  outputLayer.connect(\r\n                    forgetGate,\r\n                    methods.connection.ALL_TO_ALL\r\n                  );\r\n                  outputLayer.connect(\r\n                    outputGate,\r\n                    methods.connection.ALL_TO_ALL\r\n                  );\r\n                }\r\n\r\n                // Add to array\r\n                nodes.push(inputGate);\r\n                nodes.push(forgetGate);\r\n                nodes.push(memoryCell);\r\n                nodes.push(outputGate);\r\n                if (i !== blocks.length - 1) nodes.push(outputBlock);\r\n\r\n                previous = outputBlock;\r\n              }\r\n\r\n              // input to output direct connection\r\n              if (options.inputToOutput) {\r\n                inputLayer.connect(outputLayer, methods.connection.ALL_TO_ALL);\r\n              }\r\n\r\n              nodes.push(outputLayer);\r\n              return architect.Construct(nodes);\r\n            },\r\n\r\n            /**\r\n             * Creates a gated recurrent unit network\r\n             */\r\n            GRU: function () {\r\n              var args = Array.prototype.slice.call(arguments);\r\n              if (args.length < 3) {\r\n                throw new Error('not enough layers (minimum 3) !!');\r\n              }\r\n\r\n              var inputLayer = new Group(args.shift()); // first argument\r\n              var outputLayer = new Group(args.pop()); // last argument\r\n              var blocks = args; // all the arguments in the middle\r\n\r\n              var nodes = [];\r\n              nodes.push(inputLayer);\r\n\r\n              var previous = inputLayer;\r\n              for (var i = 0; i < blocks.length; i++) {\r\n                var layer = new Layer.GRU(blocks[i]);\r\n                previous.connect(layer);\r\n                previous = layer;\r\n\r\n                nodes.push(layer);\r\n              }\r\n\r\n              previous.connect(outputLayer);\r\n              nodes.push(outputLayer);\r\n\r\n              return architect.Construct(nodes);\r\n            },\r\n\r\n            /**\r\n             * Creates a hopfield network of the given size\r\n             */\r\n            Hopfield: function (size) {\r\n              var input = new Group(size);\r\n              var output = new Group(size);\r\n\r\n              input.connect(output, methods.connection.ALL_TO_ALL);\r\n\r\n              input.set({\r\n                type: 'input',\r\n              });\r\n              output.set({\r\n                squash: methods.activation.STEP,\r\n                type: 'output',\r\n              });\r\n\r\n              var network = new architect.Construct([input, output]);\r\n\r\n              return network;\r\n            },\r\n\r\n            /**\r\n             * Creates a NARX network (remember previous inputs/outputs)\r\n             */\r\n            NARX: function (\r\n              inputSize,\r\n              hiddenLayers,\r\n              outputSize,\r\n              previousInput,\r\n              previousOutput\r\n            ) {\r\n              if (!Array.isArray(hiddenLayers)) {\r\n                hiddenLayers = [hiddenLayers];\r\n              }\r\n\r\n              var nodes = [];\r\n\r\n              var input = new Layer.Dense(inputSize);\r\n              var inputMemory = new Layer.Memory(inputSize, previousInput);\r\n              var hidden = [];\r\n              var output = new Layer.Dense(outputSize);\r\n              var outputMemory = new Layer.Memory(outputSize, previousOutput);\r\n\r\n              nodes.push(input);\r\n              nodes.push(outputMemory);\r\n\r\n              for (var i = 0; i < hiddenLayers.length; i++) {\r\n                var hiddenLayer = new Layer.Dense(hiddenLayers[i]);\r\n                hidden.push(hiddenLayer);\r\n                nodes.push(hiddenLayer);\r\n                if (typeof hidden[i - 1] !== 'undefined') {\r\n                  hidden[i - 1].connect(\r\n                    hiddenLayer,\r\n                    methods.connection.ALL_TO_ALL\r\n                  );\r\n                }\r\n              }\r\n\r\n              nodes.push(inputMemory);\r\n              nodes.push(output);\r\n\r\n              input.connect(hidden[0], methods.connection.ALL_TO_ALL);\r\n              input.connect(inputMemory, methods.connection.ONE_TO_ONE, 1);\r\n              inputMemory.connect(hidden[0], methods.connection.ALL_TO_ALL);\r\n              hidden[hidden.length - 1].connect(\r\n                output,\r\n                methods.connection.ALL_TO_ALL\r\n              );\r\n              output.connect(outputMemory, methods.connection.ONE_TO_ONE, 1);\r\n              outputMemory.connect(hidden[0], methods.connection.ALL_TO_ALL);\r\n\r\n              input.set({\r\n                type: 'input',\r\n              });\r\n              output.set({\r\n                type: 'output',\r\n              });\r\n\r\n              return architect.Construct(nodes);\r\n            },\r\n          };\r\n\r\n          /* Export */\r\n          module.exports = architect;\r\n\r\n          /***/\r\n        },\r\n        /* 19 */\r\n        /***/ function (module, exports, __nested_webpack_require_161998__) {\r\n          /*******************************************************************************\r\n                                  WORKERS\r\n*******************************************************************************/\r\n\r\n          var workers = {\r\n            node: {\r\n              TestWorker: __nested_webpack_require_161998__(20),\r\n            },\r\n            browser: {\r\n              TestWorker: __nested_webpack_require_161998__(24),\r\n            },\r\n          };\r\n\r\n          /** Export */\r\n          module.exports = workers;\r\n\r\n          /***/\r\n        },\r\n        /* 20 */\r\n        /***/ function (module, exports, __nested_webpack_require_162617__) {\r\n          /* Export */\r\n          module.exports = TestWorker;\r\n\r\n          /* Import */\r\n          var cp = __nested_webpack_require_162617__(21);\r\n          var path = __nested_webpack_require_162617__(22);\r\n\r\n          /*******************************************************************************\r\n                                WEBWORKER\r\n*******************************************************************************/\r\n\r\n          function TestWorker(dataSet, cost) {\r\n            this.worker = cp.fork(path.join(__dirname, '/worker'));\r\n\r\n            this.worker.send({ set: dataSet, cost: cost.name });\r\n          }\r\n\r\n          TestWorker.prototype = {\r\n            evaluate: function (network) {\r\n              return new Promise((resolve, reject) => {\r\n                var serialized = network.serialize();\r\n\r\n                var data = {\r\n                  activations: serialized[0],\r\n                  states: serialized[1],\r\n                  conns: serialized[2],\r\n                };\r\n\r\n                var _that = this.worker;\r\n                this.worker.on('message', function callback(e) {\r\n                  _that.removeListener('message', callback);\r\n                  resolve(e);\r\n                });\r\n\r\n                this.worker.send(data);\r\n              });\r\n            },\r\n\r\n            terminate: function () {\r\n              this.worker.kill();\r\n            },\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 21 */\r\n        /***/ function (module, exports) {\r\n          module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\r\n\r\n          /***/\r\n        },\r\n        /* 22 */\r\n        /***/ function (module, exports, __nested_webpack_require_164268__) {\r\n          /* WEBPACK VAR INJECTION */ (function (process) {\r\n            // Copyright Joyent, Inc. and other Node contributors.\r\n            //\r\n            // Permission is hereby granted, free of charge, to any person obtaining a\r\n            // copy of this software and associated documentation files (the\r\n            // \"Software\"), to deal in the Software without restriction, including\r\n            // without limitation the rights to use, copy, modify, merge, publish,\r\n            // distribute, sublicense, and/or sell copies of the Software, and to permit\r\n            // persons to whom the Software is furnished to do so, subject to the\r\n            // following conditions:\r\n            //\r\n            // The above copyright notice and this permission notice shall be included\r\n            // in all copies or substantial portions of the Software.\r\n            //\r\n            // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n            // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n            // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n            // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n            // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n            // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n            // USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n            // resolves . and .. elements in a path array with directory names there\r\n            // must be no slashes, empty elements, or device names (c:\\) in the array\r\n            // (so also no leading and trailing slashes - it does not distinguish\r\n            // relative and absolute paths)\r\n            function normalizeArray(parts, allowAboveRoot) {\r\n              // if the path tries to go above the root, `up` ends up > 0\r\n              var up = 0;\r\n              for (var i = parts.length - 1; i >= 0; i--) {\r\n                var last = parts[i];\r\n                if (last === '.') {\r\n                  parts.splice(i, 1);\r\n                } else if (last === '..') {\r\n                  parts.splice(i, 1);\r\n                  up++;\r\n                } else if (up) {\r\n                  parts.splice(i, 1);\r\n                  up--;\r\n                }\r\n              }\r\n\r\n              // if the path is allowed to go above the root, restore leading ..s\r\n              if (allowAboveRoot) {\r\n                for (; up--; up) {\r\n                  parts.unshift('..');\r\n                }\r\n              }\r\n\r\n              return parts;\r\n            }\r\n\r\n            // Split a filename into [root, dir, basename, ext], unix version\r\n            // 'root' is just a slash, or nothing.\r\n            var splitPathRe =\r\n              /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n            var splitPath = function (filename) {\r\n              return splitPathRe.exec(filename).slice(1);\r\n            };\r\n\r\n            // path.resolve([from ...], to)\r\n            // posix version\r\n            exports.resolve = function () {\r\n              var resolvedPath = '',\r\n                resolvedAbsolute = false;\r\n\r\n              for (\r\n                var i = arguments.length - 1;\r\n                i >= -1 && !resolvedAbsolute;\r\n                i--\r\n              ) {\r\n                var path = i >= 0 ? arguments[i] : process.cwd();\r\n\r\n                // Skip empty and invalid entries\r\n                if (typeof path !== 'string') {\r\n                  throw new TypeError(\r\n                    'Arguments to path.resolve must be strings'\r\n                  );\r\n                } else if (!path) {\r\n                  continue;\r\n                }\r\n\r\n                resolvedPath = path + '/' + resolvedPath;\r\n                resolvedAbsolute = path.charAt(0) === '/';\r\n              }\r\n\r\n              // At this point the path should be resolved to a full absolute path, but\r\n              // handle relative paths to be safe (might happen when process.cwd() fails)\r\n\r\n              // Normalize the path\r\n              resolvedPath = normalizeArray(\r\n                filter(resolvedPath.split('/'), function (p) {\r\n                  return !!p;\r\n                }),\r\n                !resolvedAbsolute\r\n              ).join('/');\r\n\r\n              return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\r\n            };\r\n\r\n            // path.normalize(path)\r\n            // posix version\r\n            exports.normalize = function (path) {\r\n              var isAbsolute = exports.isAbsolute(path),\r\n                trailingSlash = substr(path, -1) === '/';\r\n\r\n              // Normalize the path\r\n              path = normalizeArray(\r\n                filter(path.split('/'), function (p) {\r\n                  return !!p;\r\n                }),\r\n                !isAbsolute\r\n              ).join('/');\r\n\r\n              if (!path && !isAbsolute) {\r\n                path = '.';\r\n              }\r\n              if (path && trailingSlash) {\r\n                path += '/';\r\n              }\r\n\r\n              return (isAbsolute ? '/' : '') + path;\r\n            };\r\n\r\n            // posix version\r\n            exports.isAbsolute = function (path) {\r\n              return path.charAt(0) === '/';\r\n            };\r\n\r\n            // posix version\r\n            exports.join = function () {\r\n              var paths = Array.prototype.slice.call(arguments, 0);\r\n              return exports.normalize(\r\n                filter(paths, function (p, index) {\r\n                  if (typeof p !== 'string') {\r\n                    throw new TypeError(\r\n                      'Arguments to path.join must be strings'\r\n                    );\r\n                  }\r\n                  return p;\r\n                }).join('/')\r\n              );\r\n            };\r\n\r\n            // path.relative(from, to)\r\n            // posix version\r\n            exports.relative = function (from, to) {\r\n              from = exports.resolve(from).substr(1);\r\n              to = exports.resolve(to).substr(1);\r\n\r\n              function trim(arr) {\r\n                var start = 0;\r\n                for (; start < arr.length; start++) {\r\n                  if (arr[start] !== '') break;\r\n                }\r\n\r\n                var end = arr.length - 1;\r\n                for (; end >= 0; end--) {\r\n                  if (arr[end] !== '') break;\r\n                }\r\n\r\n                if (start > end) return [];\r\n                return arr.slice(start, end - start + 1);\r\n              }\r\n\r\n              var fromParts = trim(from.split('/'));\r\n              var toParts = trim(to.split('/'));\r\n\r\n              var length = Math.min(fromParts.length, toParts.length);\r\n              var samePartsLength = length;\r\n              for (var i = 0; i < length; i++) {\r\n                if (fromParts[i] !== toParts[i]) {\r\n                  samePartsLength = i;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              var outputParts = [];\r\n              for (var i = samePartsLength; i < fromParts.length; i++) {\r\n                outputParts.push('..');\r\n              }\r\n\r\n              outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n\r\n              return outputParts.join('/');\r\n            };\r\n\r\n            exports.sep = '/';\r\n            exports.delimiter = ':';\r\n\r\n            exports.dirname = function (path) {\r\n              var result = splitPath(path),\r\n                root = result[0],\r\n                dir = result[1];\r\n\r\n              if (!root && !dir) {\r\n                // No dirname whatsoever\r\n                return '.';\r\n              }\r\n\r\n              if (dir) {\r\n                // It has a dirname, strip trailing slash\r\n                dir = dir.substr(0, dir.length - 1);\r\n              }\r\n\r\n              return root + dir;\r\n            };\r\n\r\n            exports.basename = function (path, ext) {\r\n              var f = splitPath(path)[2];\r\n              // TODO: make this comparison case-insensitive on windows?\r\n              if (ext && f.substr(-1 * ext.length) === ext) {\r\n                f = f.substr(0, f.length - ext.length);\r\n              }\r\n              return f;\r\n            };\r\n\r\n            exports.extname = function (path) {\r\n              return splitPath(path)[3];\r\n            };\r\n\r\n            function filter(xs, f) {\r\n              if (xs.filter) return xs.filter(f);\r\n              var res = [];\r\n              for (var i = 0; i < xs.length; i++) {\r\n                if (f(xs[i], i, xs)) res.push(xs[i]);\r\n              }\r\n              return res;\r\n            }\r\n\r\n            // String.prototype.substr - negative index don't work in IE8\r\n            var substr =\r\n               true\r\n                ? function (str, start, len) {\r\n                    return str.substr(start, len);\r\n                  }\r\n                : 0;\r\n\r\n            /* WEBPACK VAR INJECTION */\r\n          }).call(exports, __nested_webpack_require_164268__(23));\r\n\r\n          /***/\r\n        },\r\n        /* 23 */\r\n        /***/ function (module, exports) {\r\n          // shim for using process in browser\r\n          var process = (module.exports = {});\r\n\r\n          // cached from whatever global is present so that test runners that stub it\r\n          // don't break things.  But we need to wrap it in a try catch in case it is\r\n          // wrapped in strict mode code which doesn't define any globals.  It's inside a\r\n          // function because try/catches deoptimize in certain engines.\r\n\r\n          var cachedSetTimeout;\r\n          var cachedClearTimeout;\r\n\r\n          function defaultSetTimout() {\r\n            throw new Error('setTimeout has not been defined');\r\n          }\r\n          function defaultClearTimeout() {\r\n            throw new Error('clearTimeout has not been defined');\r\n          }\r\n          (function () {\r\n            try {\r\n              if (typeof setTimeout === 'function') {\r\n                cachedSetTimeout = setTimeout;\r\n              } else {\r\n                cachedSetTimeout = defaultSetTimout;\r\n              }\r\n            } catch (e) {\r\n              cachedSetTimeout = defaultSetTimout;\r\n            }\r\n            try {\r\n              if (typeof clearTimeout === 'function') {\r\n                cachedClearTimeout = clearTimeout;\r\n              } else {\r\n                cachedClearTimeout = defaultClearTimeout;\r\n              }\r\n            } catch (e) {\r\n              cachedClearTimeout = defaultClearTimeout;\r\n            }\r\n          })();\r\n          function runTimeout(fun) {\r\n            if (cachedSetTimeout === setTimeout) {\r\n              //normal enviroments in sane situations\r\n              return setTimeout(fun, 0);\r\n            }\r\n            // if setTimeout wasn't available but was latter defined\r\n            if (\r\n              (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&\r\n              setTimeout\r\n            ) {\r\n              cachedSetTimeout = setTimeout;\r\n              return setTimeout(fun, 0);\r\n            }\r\n            try {\r\n              // when when somebody has screwed with setTimeout but no I.E. maddness\r\n              return cachedSetTimeout(fun, 0);\r\n            } catch (e) {\r\n              try {\r\n                // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n                return cachedSetTimeout.call(null, fun, 0);\r\n              } catch (e) {\r\n                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n                return cachedSetTimeout.call(this, fun, 0);\r\n              }\r\n            }\r\n          }\r\n          function runClearTimeout(marker) {\r\n            if (cachedClearTimeout === clearTimeout) {\r\n              //normal enviroments in sane situations\r\n              return clearTimeout(marker);\r\n            }\r\n            // if clearTimeout wasn't available but was latter defined\r\n            if (\r\n              (cachedClearTimeout === defaultClearTimeout ||\r\n                !cachedClearTimeout) &&\r\n              clearTimeout\r\n            ) {\r\n              cachedClearTimeout = clearTimeout;\r\n              return clearTimeout(marker);\r\n            }\r\n            try {\r\n              // when when somebody has screwed with setTimeout but no I.E. maddness\r\n              return cachedClearTimeout(marker);\r\n            } catch (e) {\r\n              try {\r\n                // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n                return cachedClearTimeout.call(null, marker);\r\n              } catch (e) {\r\n                // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n                // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n                return cachedClearTimeout.call(this, marker);\r\n              }\r\n            }\r\n          }\r\n          var queue = [];\r\n          var draining = false;\r\n          var currentQueue;\r\n          var queueIndex = -1;\r\n\r\n          function cleanUpNextTick() {\r\n            if (!draining || !currentQueue) {\r\n              return;\r\n            }\r\n            draining = false;\r\n            if (currentQueue.length) {\r\n              queue = currentQueue.concat(queue);\r\n            } else {\r\n              queueIndex = -1;\r\n            }\r\n            if (queue.length) {\r\n              drainQueue();\r\n            }\r\n          }\r\n\r\n          function drainQueue() {\r\n            if (draining) {\r\n              return;\r\n            }\r\n            var timeout = runTimeout(cleanUpNextTick);\r\n            draining = true;\r\n\r\n            var len = queue.length;\r\n            while (len) {\r\n              currentQueue = queue;\r\n              queue = [];\r\n              while (++queueIndex < len) {\r\n                if (currentQueue) {\r\n                  currentQueue[queueIndex].run();\r\n                }\r\n              }\r\n              queueIndex = -1;\r\n              len = queue.length;\r\n            }\r\n            currentQueue = null;\r\n            draining = false;\r\n            runClearTimeout(timeout);\r\n          }\r\n\r\n          process.nextTick = function (fun) {\r\n            var args = new Array(arguments.length - 1);\r\n            if (arguments.length > 1) {\r\n              for (var i = 1; i < arguments.length; i++) {\r\n                args[i - 1] = arguments[i];\r\n              }\r\n            }\r\n            queue.push(new Item(fun, args));\r\n            if (queue.length === 1 && !draining) {\r\n              runTimeout(drainQueue);\r\n            }\r\n          };\r\n\r\n          // v8 likes predictible objects\r\n          function Item(fun, array) {\r\n            this.fun = fun;\r\n            this.array = array;\r\n          }\r\n          Item.prototype.run = function () {\r\n            this.fun.apply(null, this.array);\r\n          };\r\n          process.title = 'browser';\r\n          process.browser = true;\r\n          process.env = {};\r\n          process.argv = [];\r\n          process.version = ''; // empty string to avoid regexp issues\r\n          process.versions = {};\r\n\r\n          function noop() {}\r\n\r\n          process.on = noop;\r\n          process.addListener = noop;\r\n          process.once = noop;\r\n          process.off = noop;\r\n          process.removeListener = noop;\r\n          process.removeAllListeners = noop;\r\n          process.emit = noop;\r\n          process.prependListener = noop;\r\n          process.prependOnceListener = noop;\r\n\r\n          process.listeners = function (name) {\r\n            return [];\r\n          };\r\n\r\n          process.binding = function (name) {\r\n            throw new Error('process.binding is not supported');\r\n          };\r\n\r\n          process.cwd = function () {\r\n            return '/';\r\n          };\r\n          process.chdir = function (dir) {\r\n            throw new Error('process.chdir is not supported');\r\n          };\r\n          process.umask = function () {\r\n            return 0;\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 24 */\r\n        /***/ function (module, exports, __nested_webpack_require_180678__) {\r\n          /* Export */\r\n          module.exports = TestWorker;\r\n\r\n          /* Import */\r\n          var multi = __nested_webpack_require_180678__(5);\r\n\r\n          /*******************************************************************************\r\n                                WEBWORKER\r\n*******************************************************************************/\r\n\r\n          function TestWorker(dataSet, cost) {\r\n            var blob = new Blob([this._createBlobString(cost)]);\r\n            this.url = window.URL.createObjectURL(blob);\r\n            this.worker = new Worker(this.url);\r\n\r\n            var data = { set: new Float64Array(dataSet).buffer };\r\n            this.worker.postMessage(data, [data.set]);\r\n          }\r\n\r\n          TestWorker.prototype = {\r\n            evaluate: function (network) {\r\n              return new Promise((resolve, reject) => {\r\n                var serialized = network.serialize();\r\n\r\n                var data = {\r\n                  activations: new Float64Array(serialized[0]).buffer,\r\n                  states: new Float64Array(serialized[1]).buffer,\r\n                  conns: new Float64Array(serialized[2]).buffer,\r\n                };\r\n\r\n                this.worker.onmessage = function (e) {\r\n                  var error = new Float64Array(e.data.buffer)[0];\r\n                  resolve(error);\r\n                };\r\n\r\n                this.worker.postMessage(data, [\r\n                  data.activations,\r\n                  data.states,\r\n                  data.conns,\r\n                ]);\r\n              });\r\n            },\r\n\r\n            terminate: function () {\r\n              this.worker.terminate();\r\n              window.URL.revokeObjectURL(this.url);\r\n            },\r\n\r\n            _createBlobString: function (cost) {\r\n              var source = `\r\n      var F = [${multi.activations.toString()}];\r\n      var cost = ${cost.toString()};\r\n      var multi = {\r\n        deserializeDataSet: ${multi.deserializeDataSet.toString()},\r\n        testSerializedSet: ${multi.testSerializedSet.toString()},\r\n        activateSerializedNetwork: ${multi.activateSerializedNetwork.toString()}\r\n      };\r\n\r\n      this.onmessage = function (e) {\r\n        if(typeof e.data.set === 'undefined'){\r\n          var A = new Float64Array(e.data.activations);\r\n          var S = new Float64Array(e.data.states);\r\n          var data = new Float64Array(e.data.conns);\r\n\r\n          var error = multi.testSerializedSet(set, cost, A, S, data, F);\r\n\r\n          var answer = { buffer: new Float64Array([error ]).buffer };\r\n          postMessage(answer, [answer.buffer]);\r\n        } else {\r\n          set = multi.deserializeDataSet(new Float64Array(e.data.set));\r\n        }\r\n      };`;\r\n\r\n              return source;\r\n            },\r\n          };\r\n\r\n          /***/\r\n        },\r\n        /* 25 */\r\n        /***/ function (module, exports) {\r\n          module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\r\n\r\n          /***/\r\n        },\r\n        /******/\r\n      ]\r\n    );\r\n  }\r\n);\r\n\n\n//# sourceURL=webpack://text-prediction/./src/webWorker/neataptic.js?");

/***/ }),

/***/ "?a867":
/*!*******************************!*\
  !*** child_process (ignored) ***!
  \*******************************/
/***/ (function() {

eval("/* (ignored) */\n\n//# sourceURL=webpack://text-prediction/child_process_(ignored)?");

/***/ }),

/***/ "?a268":
/*!********************!*\
  !*** os (ignored) ***!
  \********************/
/***/ (function() {

eval("/* (ignored) */\n\n//# sourceURL=webpack://text-prediction/os_(ignored)?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/adapters.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/adapters/adapters.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http.js */ \"./node_modules/axios/lib/helpers/null.js\");\n/* harmony import */ var _xhr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xhr.js */ \"./node_modules/axios/lib/adapters/xhr.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst knownAdapters = {\n  http: _http_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  xhr: _xhr_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  getAdapter: (adapters) => {\n    adapters = _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n});\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/adapters/adapters.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../core/settle.js */ \"./node_modules/axios/lib/core/settle.js\");\n/* harmony import */ var _helpers_cookies_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../helpers/cookies.js */ \"./node_modules/axios/lib/helpers/cookies.js\");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../helpers/buildURL.js */ \"./node_modules/axios/lib/helpers/buildURL.js\");\n/* harmony import */ var _core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/buildFullPath.js */ \"./node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _helpers_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../helpers/isURLSameOrigin.js */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\n/* harmony import */ var _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../defaults/transitional.js */ \"./node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../helpers/parseProtocol.js */ \"./node_modules/axios/lib/helpers/parseProtocol.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/browser/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_speedometer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/speedometer.js */ \"./node_modules/axios/lib/helpers/speedometer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = (0,_helpers_speedometer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isFormData(requestData) && (_platform_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isStandardBrowserEnv || _platform_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isStandardBrowserWebWorkerEnv)) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = (0,_core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]('Request aborted', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"];\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ETIMEDOUT : _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (_platform_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || (0,_helpers_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(fullPath))\n        && config.xsrfCookieName && _helpers_cookies_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"].read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"](null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = (0,_helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(fullPath);\n\n    if (protocol && _platform_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].protocols.indexOf(protocol) === -1) {\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]('Unsupported protocol ' + protocol + ':', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n});\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/axios/lib/helpers/bind.js\");\n/* harmony import */ var _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Axios.js */ \"./node_modules/axios/lib/core/Axios.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/mergeConfig.js */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/formDataToJSON.js */ \"./node_modules/axios/lib/helpers/formDataToJSON.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cancel/CancelToken.js */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cancel/isCancel.js */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./env/data.js */ \"./node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/spread.js */ \"./node_modules/axios/lib/helpers/spread.js\");\n/* harmony import */ var _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/isAxiosError.js */ \"./node_modules/axios/lib/helpers/isAxiosError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./helpers/HttpStatusCode.js */ \"./node_modules/axios/lib/helpers/HttpStatusCode.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](defaultConfig);\n  const instance = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.request, context);\n\n  // Copy axios.prototype to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance((0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n// Expose Cancel & CancelToken\naxios.CanceledError = _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\naxios.CancelToken = _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\naxios.isCancel = _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\naxios.VERSION = _env_data_js__WEBPACK_IMPORTED_MODULE_8__.VERSION;\naxios.toFormData = _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n\n// Expose AxiosError class\naxios.AxiosError = _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n\n// Expose isAxiosError\naxios.isAxiosError = _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\n\n// Expose mergeConfig\naxios.mergeConfig = _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n\naxios.AxiosHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\n\naxios.formToJSON = thing => (0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"];\n\naxios.default = axios;\n\n// this module should only have a default export\n/* harmony default export */ __webpack_exports__[\"default\"] = (axios);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n\n\n\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CancelToken);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CanceledError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CanceledError.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].call(this, message == null ? 'canceled' : message, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inherits(CanceledError, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n  __CANCEL__: true\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CanceledError);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/cancel/CanceledError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isCancel; }\n/* harmony export */ });\n\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/buildURL.js */ \"./node_modules/axios/lib/helpers/buildURL.js\");\n/* harmony import */ var _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InterceptorManager.js */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\n/* harmony import */ var _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dispatchRequest.js */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\n/* harmony import */ var _mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mergeConfig.js */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./buildFullPath.js */ \"./node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validator.js */ \"./node_modules/axios/lib/helpers/validator.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst validators = _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](),\n      response: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [_dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n    const fullPath = (0,_buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(config.baseURL, config.url);\n    return (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Axios);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosError.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosError.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosError);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/AxiosError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosHeaders.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosHeaders.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/parseHeaders.js */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\n\n\n\n\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(value)) return;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders((0,_helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].freezeMethods(AxiosHeaders.prototype);\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].freezeMethods(AxiosHeaders);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosHeaders);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/AxiosHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (InterceptorManager);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ buildFullPath; }\n/* harmony export */ });\n/* harmony import */ var _helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/isAbsoluteURL.js */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\n/* harmony import */ var _helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/combineURLs.js */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n\n\n\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !(0,_helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(requestedURL)) {\n    return (0,_helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/buildFullPath.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ dispatchRequest; }\n/* harmony export */ });\n/* harmony import */ var _transformData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformData.js */ \"./node_modules/axios/lib/core/transformData.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cancel/isCancel.js */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../adapters/adapters.js */ \"./node_modules/axios/lib/adapters/adapters.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(config.headers);\n\n  // Transform request data\n  config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAdapter(config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!(0,_cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ mergeConfig; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\nconst headersToObject = (thing) => thing instanceof _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(target) && _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge.call({caseless}, target, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge({}, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/mergeConfig.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ settle; }\n/* harmony export */ });\n/* harmony import */ var _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n      'Request failed with status code ' + response.status,\n      [_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_REQUEST, _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ transformData; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../defaults/index.js */ \"./node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n  const context = response || config;\n  const headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(context.headers);\n  let data = context.data;\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/defaults/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _transitional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transitional.js */ \"./node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toURLEncodedForm.js */ \"./node_modules/axios/lib/helpers/toURLEncodedForm.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/browser/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/formDataToJSON.js */ \"./node_modules/axios/lib/helpers/formDataToJSON.js\");\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: _transitional_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(data);\n\n    if (isObjectPayload && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify((0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(data)) : data;\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStream(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFile(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(data)\n    ) {\n      return data;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return (0,_helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return (0,_helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].from(e, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.FormData,\n    Blob: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].merge(DEFAULT_CONTENT_TYPE);\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (defaults);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/defaults/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults/transitional.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/defaults/transitional.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n});\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/defaults/transitional.js?");

/***/ }),

/***/ "./node_modules/axios/lib/env/data.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/env/data.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VERSION\": function() { return /* binding */ VERSION; }\n/* harmony export */ });\nconst VERSION = \"1.3.2\";\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/env/data.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/AxiosURLSearchParams.js":
/*!****************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/AxiosURLSearchParams.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n\n\n\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AxiosURLSearchParams);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/HttpStatusCode.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/HttpStatusCode.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (HttpStatusCode);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/HttpStatusCode.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ bind; }\n/* harmony export */ });\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ buildURL; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/AxiosURLSearchParams.js */ \"./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(params) ?\n      params.toString() :\n      new _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ combineURLs; }\n/* harmony export */ });\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/browser/index.js\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })());\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/formDataToJSON.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/formDataToJSON.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(formData) && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(formData.entries)) {\n    const obj = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (formDataToJSON);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/formDataToJSON.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAbsoluteURL; }\n/* harmony export */ });\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isAxiosError; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(payload) && (payload.isAxiosError === true);\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/isAxiosError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/browser/index.js\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })());\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/null.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/null.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// eslint-disable-next-line strict\n/* harmony default export */ __webpack_exports__[\"default\"] = (null);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/null.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n});\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseProtocol.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseProtocol.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ parseProtocol; }\n/* harmony export */ });\n\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/parseProtocol.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/speedometer.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/speedometer.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (speedometer);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/speedometer.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ spread; }\n/* harmony export */ });\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/toFormData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toFormData.js ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/node/classes/FormData.js */ \"./node_modules/axios/lib/helpers/null.js\");\n\n\n\n\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(thing) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (_platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isSpecCompliantForm(formData);\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(value)) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) && isFlatArray(value)) ||\n        ((_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]')) && (arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(value, function each(el, key) {\n      const result = !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && visitor.call(\n        formData, el, _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (toFormData);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/toFormData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/toURLEncodedForm.js":
/*!************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toURLEncodedForm.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ toURLEncodedForm; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/browser/index.js\");\n\n\n\n\n\n\nfunction toURLEncodedForm(data, options) {\n  return (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(data, new _platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNode && _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/toURLEncodedForm.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env/data.js */ \"./node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + _env_data_js__WEBPACK_IMPORTED_MODULE_0__.VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('options must be an object', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('option ' + opt + ' must be ' + result, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('Unknown option ' + opt, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION);\n    }\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  assertOptions,\n  validators\n});\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/helpers/validator.js?");

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/FormData.js":
/*!*********************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/FormData.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FormData);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/platform/browser/classes/FormData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js":
/*!****************************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/AxiosURLSearchParams.js */ \"./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js?");

/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/URLSearchParams.js */ \"./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\");\n/* harmony import */ var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/FormData.js */ \"./node_modules/axios/lib/platform/browser/classes/FormData.js\");\n\n\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  isBrowser: true,\n  classes: {\n    URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n});\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/platform/browser/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n\n\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject\n});\n\n\n//# sourceURL=webpack://text-prediction/./node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./src/webWorker/MarketPricePredictionTest.mjs":
/*!*****************************************************!*\
  !*** ./src/webWorker/MarketPricePredictionTest.mjs ***!
  \*****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLstmDataSet\": function() { return /* binding */ createLstmDataSet; },\n/* harmony export */   \"createNewLstmNetwork\": function() { return /* binding */ createNewLstmNetwork; },\n/* harmony export */   \"default\": function() { return /* binding */ run; },\n/* harmony export */   \"loadLstmNetworkFromJson\": function() { return /* binding */ loadLstmNetworkFromJson; },\n/* harmony export */   \"setHiddenLayerSize\": function() { return /* binding */ setHiddenLayerSize; },\n/* harmony export */   \"setInputLayerSize\": function() { return /* binding */ setInputLayerSize; },\n/* harmony export */   \"test\": function() { return /* binding */ test; }\n/* harmony export */ });\n/* harmony import */ var _neataptic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./neataptic.js */ \"./src/webWorker/neataptic.js\");\n/* harmony import */ var _getDataSet_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getDataSet.mjs */ \"./src/webWorker/getDataSet.mjs\");\n/* harmony import */ var _init_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.mjs */ \"./src/webWorker/init.mjs\");\n/* harmony import */ var _Workers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Workers.js */ \"./src/Workers.js\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config.mjs */ \"./src/webWorker/config.mjs\");\n// import axios from '../../node_modules/axios/index.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst { architect, methods, Network } = _neataptic_js__WEBPACK_IMPORTED_MODULE_0__;\r\n\r\nlet inputSize = 31;\r\nlet hiddenLayerSize = 15;\r\nlet outputSize = inputSize;\r\n\r\nconst market = 'FETBNB';\r\n\r\nconst TRAINING_LOOP_MAX_COUNTER = 10;\r\n\r\nconst dataSet = [];\r\n\r\nlet networkJson = null;\r\nlet network = null;\r\n\r\nasync function createLstmDataSet({ value, requestId }) {\r\n  dataSet.length = 0;\r\n  const { marketData } = value;\r\n  try {\r\n    const data = await (0,_getDataSet_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(inputSize, marketData);\r\n    dataSet.push(...data);\r\n    postMessage({\r\n      action: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Actions.CREATE_LSTM_DATA_SET,\r\n      value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Statuses.OK, dataSetLength: dataSet.length },\r\n      requestId,\r\n    });\r\n  } catch (e) {\r\n    postMessage({\r\n      action: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Actions.CREATE_LSTM_DATA_SET,\r\n      value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Statuses.ERROR, error: e },\r\n      requestId,\r\n    });\r\n  }\r\n}\r\n\r\nfunction run({ action, requestId }) {\r\n  logFunction('dSize ' + dataSet.length);\r\n  dataSet.forEach(({ input, output }) => {\r\n    if (input.length !== inputSize || output.length !== outputSize) {\r\n      logFunction({ input, output, inputSize, message: 'error' });\r\n      throw new Error(\r\n        'Niezgodny rozmiar danych wejściowych/wyjściowych\\noczekiwany we=' +\r\n          inputSize +\r\n          ' wy=' +\r\n          outputSize +\r\n          '\\notrzymano we=' +\r\n          input.length +\r\n          ' wy=' +\r\n          output.length\r\n      );\r\n    }\r\n  });\r\n\r\n  // fs.writeFileSync('dataset.json', JSON.stringify(trainingData));\r\n  const TRAINING_DATASET_LENGTH = 100;\r\n  const HALF_DATASET_SIZE = TRAINING_DATASET_LENGTH / 2;\r\n  // const startIndex = dataSet.findIndex(\r\n  //   ({ input }, id) => id > HALF_DATASET_SIZE && input.slice(-2).includes(1)\r\n  // );\r\n  const startIndex =\r\n    Math.floor(Math.random() * (dataSet.length - TRAINING_DATASET_LENGTH)) +\r\n    HALF_DATASET_SIZE;\r\n  logFunction({ startIndex });\r\n  try {\r\n    train(\r\n      dataSet.slice(\r\n        startIndex - HALF_DATASET_SIZE,\r\n        startIndex + HALF_DATASET_SIZE\r\n      )\r\n    );\r\n    // postMessage({ action, requestId, value: { status: Statuses.OK } });\r\n    testPredictions(dataSet);\r\n  } catch (e) {\r\n    logFunction({ e: e.message });\r\n  }\r\n}\r\n\r\nfunction test({ action, requestId }) {\r\n  postMessage({\r\n    action,\r\n    requestId,\r\n    value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Statuses.OK, testResult: testPredictions(dataSet) },\r\n  });\r\n  logFunction('testowo');\r\n}\r\n\r\nfunction createNewLstmNetwork({ action, requestId, value }) {\r\n  const network = new architect.LSTM(\r\n    value?.inputSize || inputSize,\r\n    value?.hiddenLayerSize || hiddenLayerSize,\r\n    value?.outputSize || outputSize\r\n  );\r\n  postMessage({\r\n    action,\r\n    requestId,\r\n    value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Statuses.OK, network: network.toJSON() },\r\n  });\r\n  return network;\r\n}\r\n\r\nfunction loadLstmNetworkFromJson({ action, requestId, value }) {\r\n  if (typeof value !== 'object') {\r\n    postMessage({\r\n      action,\r\n      requestId,\r\n      value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Statuses.ERROR },\r\n    });\r\n    return;\r\n  }\r\n  networkJson = value;\r\n  inputSize = value.input;\r\n  outputSize = value.output;\r\n  network = Network.fromJSON(networkJson);\r\n  postMessage({\r\n    action,\r\n    requestId,\r\n    value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Statuses.OK },\r\n  });\r\n}\r\n\r\nfunction train(trainingData) {\r\n  // Math.random.reset();\r\n  logFunction('Number of hidden neurons', hiddenLayerSize);\r\n  const myNetwork = Network.fromJSON(networkJson);\r\n  let batchCount = TRAINING_LOOP_MAX_COUNTER / 2 + 1;\r\n  for (\r\n    let trainingLoopCounter = 0;\r\n    trainingLoopCounter < TRAINING_LOOP_MAX_COUNTER;\r\n    trainingLoopCounter += 1\r\n  ) {\r\n    sendTrainingProgress(\r\n      `${(trainingLoopCounter / TRAINING_LOOP_MAX_COUNTER) * 100}%`\r\n    );\r\n\r\n    batchCount -= trainingLoopCounter % 2;\r\n    const trainingOptions = {\r\n      log: 100,\r\n      cost: methods.cost.MSE,\r\n      rate: 0.15 * (1 - trainingLoopCounter / TRAINING_LOOP_MAX_COUNTER),\r\n      iterations: 10000,\r\n      clear: true,\r\n      error: 0.1 / inputSize,\r\n      schedule: {\r\n        function() {\r\n          trainingOptions.kill = true;\r\n        },\r\n        iterations: 5000,\r\n      },\r\n    };\r\n\r\n    for (let i = 0; i < batchCount; i += 1) {\r\n      const batchId = i;\r\n      const from = Math.floor((batchId * trainingData.length) / batchCount);\r\n      const to = Math.floor(((batchId + 1) * trainingData.length) / batchCount);\r\n      const dataSet = trainingData.slice(from, to);\r\n      sendTrainingProgress(\r\n        `${(\r\n          ((trainingLoopCounter + i / batchCount) / TRAINING_LOOP_MAX_COUNTER) *\r\n          100\r\n        ).toFixed(2)}%`\r\n      );\r\n      try {\r\n        myNetwork.train(dataSet, trainingOptions);\r\n      } catch (e) {\r\n        logFunction(dataSet, from, to, trainingData.length);\r\n        throw e;\r\n      }\r\n\r\n      if (trainingOptions.kill) break;\r\n    }\r\n\r\n    if (trainingOptions.kill) {\r\n      logFunction('Dlugie uczenie, kill');\r\n      testPredictions(trainingData, myNetwork.toJSON());\r\n      setTimeout(() => {\r\n        hiddenLayerSize += 1;\r\n        networkJson = new architect.LSTM(\r\n          inputSize,\r\n          hiddenLayerSize,\r\n          outputSize\r\n        ).toJSON();\r\n        train(trainingData);\r\n      }, 100);\r\n      break;\r\n    }\r\n\r\n    testPredictions(trainingData);\r\n  }\r\n}\r\n\r\nfunction sendTrainingProgress(progress) {\r\n  const action = _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Actions.TRAINING_PROGRESS;\r\n  postMessage({\r\n    action,\r\n    value: progress,\r\n  });\r\n}\r\n\r\nfunction testPredictions(testDataSet) {\r\n  const net = Network.fromJSON(networkJson);\r\n\r\n  const testResult = testDataSet.reduce(\r\n    (prev, { time, input, output, close }, id) => {\r\n      const out = net.activate(input);\r\n      const maxOutId = out.reduce((p, c, id) => {\r\n        return c > out[p] ? id : p;\r\n      }, 0);\r\n      prev.indexes.push(maxOutId);\r\n      if (maxOutId < 1 + 1 && id - prev.lastTradingId > 5) {\r\n        if (!prev.buyState) {\r\n          prev.investment = Math.min(50, prev.balance) && prev.balance * 0.3;\r\n          prev.balance -= prev.investment;\r\n          prev.btc = (prev.investment / close) * 0.998;\r\n          prev.buyState = true;\r\n          prev.lastTradingId = id;\r\n          logFunction('buy');\r\n          prev.traiding.push({ time, type: 'buy', close });\r\n        }\r\n      } else if (\r\n        maxOutId >= inputSize - 1 - 1 &&\r\n        prev.btc !== 0 &&\r\n        id - prev.lastTradingId > 24\r\n      ) {\r\n        if (prev.buyState) {\r\n          prev.balance += prev.btc * close * 0.998;\r\n          prev.btc = 0;\r\n          prev.buyState = false;\r\n          // prev.lastTradingId = id;\r\n          logFunction('sell', prev.balance);\r\n          prev.traiding.push({ time, type: 'sell', close });\r\n        }\r\n      }\r\n      try {\r\n        net.propagate(0.95, 0, true, output);\r\n      } catch (e) {\r\n        logFunction({ output });\r\n        throw e;\r\n      }\r\n\r\n      if (id % 100 === 0) logFunction(id);\r\n      return prev;\r\n    },\r\n    {\r\n      traiding: [],\r\n      balance: 100,\r\n      btc: 0,\r\n      indexes: [],\r\n      investment: 0,\r\n      lastTradingId: 0,\r\n    }\r\n  );\r\n  testResult.balance += testResult.btc * testDataSet.at(-1).close * 0.998;\r\n  logFunction({ testResult });\r\n  return testResult;\r\n}\r\n\r\nfunction setInputLayerSize({ action, requestId, value }) {\r\n  inputSize = value;\r\n  postMessage({\r\n    action,\r\n    requestId,\r\n    value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Statuses.OK },\r\n  });\r\n}\r\n\r\nfunction setHiddenLayerSize({ action, requestId, value }) {\r\n  hiddenLayerSize = value;\r\n  postMessage({\r\n    action,\r\n    requestId,\r\n    value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_3__.Statuses.OK },\r\n  });\r\n}\r\n\n\n//# sourceURL=webpack://text-prediction/./src/webWorker/MarketPricePredictionTest.mjs?");

/***/ }),

/***/ "./src/webWorker/config.mjs":
/*!**********************************!*\
  !*** ./src/webWorker/config.mjs ***!
  \**********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getHost\": function() { return /* binding */ getHost; },\n/* harmony export */   \"setHost\": function() { return /* binding */ setHost; }\n/* harmony export */ });\nlet hostName = '';\r\nfunction setHost(host) {\r\n  hostName = host.replace('3000', '5000');\r\n}\r\n\r\nfunction getHost() {\r\n  return hostName;\r\n}\r\n\n\n//# sourceURL=webpack://text-prediction/./src/webWorker/config.mjs?");

/***/ }),

/***/ "./src/webWorker/getDataSet.mjs":
/*!**************************************!*\
  !*** ./src/webWorker/getDataSet.mjs ***!
  \**************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLstmDataSet\": function() { return /* binding */ createLstmDataSet; },\n/* harmony export */   \"createPerceptronDataSet\": function() { return /* binding */ createPerceptronDataSet; },\n/* harmony export */   \"default\": function() { return /* binding */ createDataSet; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.mjs */ \"./src/webWorker/config.mjs\");\n/* harmony import */ var _neataptic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./neataptic.js */ \"./src/webWorker/neataptic.js\");\n\r\n\r\n\r\nconst { architect, methods, Network } = _neataptic_js__WEBPACK_IMPORTED_MODULE_1__;\r\n\r\nasync function fetchMarketData(market = 'BTCUSDT', tickInterval = '1h') {\r\n  const response = (\r\n    await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\r\n      (0,_config_mjs__WEBPACK_IMPORTED_MODULE_0__.getHost)() +\r\n        '/marketData?market=' +\r\n        market +\r\n        '&tickInterval=' +\r\n        tickInterval\r\n    )\r\n  ).data;\r\n  return response;\r\n}\r\n\r\nasync function getMarketData(market, tickInterval) {\r\n  const data = await fetchMarketData(market, tickInterval);\r\n  return (typeof data === 'string' ? JSON.parse(data) : data).map(\r\n    ([time, open, high, low, close]) => ({\r\n      time,\r\n      close,\r\n    })\r\n  );\r\n}\r\n\r\nfunction getPercentageRatios(marketData, shift = 1) {\r\n  return marketData.reduce((prev, curr, id) => {\r\n    if (id === 0) {\r\n      prev.push({ ratio: 1, ...curr });\r\n    } else {\r\n      prev.push({\r\n        ratio: marketData[id - shift]\r\n          ? curr.close / marketData[id - shift].close\r\n          : 1,\r\n        ...curr,\r\n      });\r\n    }\r\n    return prev;\r\n  }, []);\r\n}\r\n\r\nfunction getNormalizedData(inputSize, percentageRatios) {\r\n  const sortedPercentageValues = [...percentageRatios].sort(\r\n    (a, b) => a.ratio - b.ratio\r\n  );\r\n  const min =\r\n    sortedPercentageValues[Math.floor(sortedPercentageValues.length * 0.05)]\r\n      .ratio;\r\n  const max =\r\n    sortedPercentageValues[Math.floor(sortedPercentageValues.length * 0.95)]\r\n      .ratio;\r\n  return percentageRatios.map((record, id) => {\r\n    const newValue = (record.ratio - min) / (max - min);\r\n    return { normal: Math.min(Math.max(newValue, 0), 0.95), ...record };\r\n  });\r\n}\r\n\r\nasync function createDataSet(inputSize, marketData) {\r\n  const ratios = getPercentageRatios(marketData);\r\n  const normalizedData = getNormalizedData(inputSize, ratios);\r\n\r\n  return normalizedData.map((record, id, arr) => {\r\n    const input = new Array(inputSize).fill(0);\r\n    input[Math.floor(record.normal * inputSize)] = 1;\r\n    if (!Number.isFinite(Math.floor(record.normal * inputSize))) {\r\n      logFunction({ record });\r\n      throw new Error('NAN ');\r\n    }\r\n    const output = new Array(inputSize).fill(0);\r\n    output[Math.floor((arr[id + 1]?.normal || 0.5) * inputSize)] = 1;\r\n    if (\r\n      input.length === inputSize - 1 ||\r\n      output.length === inputSize + 1 ||\r\n      !input.includes(1) ||\r\n      !output.includes(1)\r\n    ) {\r\n      logFunction({ input, output, record });\r\n      throw new Error('xxxx \\n' + JSON.stringify({ record }));\r\n    }\r\n    return { ...record, input, output };\r\n  });\r\n}\r\n\r\nasync function createLstmDataSet(inputSize, marketData) {\r\n  return createDataSet(inputSize, marketData);\r\n}\r\n\r\nasync function createPerceptronDataSet(\r\n  inputSize,\r\n  market,\r\n  { tickInterval } = { tickInterval: '1h' },\r\n  lstmNetworkJSON\r\n) {\r\n  const marketData = await getMarketData(market, tickInterval);\r\n  const inputRatios = getPercentageRatios(marketData);\r\n  const normalizedInputData = getNormalizedData(inputSize, inputRatios);\r\n  const outputRatios = getPercentageRatios(marketData, -5);\r\n  const normalizedOutputData = getNormalizedData(inputSize, outputRatios);\r\n\r\n  const result = normalizedInputData.map((record, id, arr) => {\r\n    const net = Network.fromJSON(lstmNetworkJSON);\r\n    const perceptronInput = [];\r\n    let prevOutput = normalizedInputData\r\n      .slice(id < 10 ? 0 : id - 10 + 1, id + 1)\r\n      .reduce((prev, record, id) => {\r\n        const input = new Array(inputSize).fill(0);\r\n        input[Math.floor(record.normal * inputSize)] = 1;\r\n        const output = new Array(inputSize).fill(0);\r\n        output[\r\n          Math.floor((normalizedInputData[id + 1]?.normal || 0.5) * inputSize)\r\n        ] = 1;\r\n        prev = new Array(inputSize).fill(0);\r\n        prev[getMaxId(net.activate(input))] = 1;\r\n        net.propagate(0.95, 0, true, output);\r\n        return prev;\r\n      }, []);\r\n    perceptronInput.push(getMaxId(prevOutput) / inputSize);\r\n    new Array(4).fill(0).forEach(() => {\r\n      const input = prevOutput;\r\n      const output = new Array(inputSize).fill(0);\r\n      const outputMaxId = getMaxId(net.activate(input));\r\n      output[outputMaxId] = 1;\r\n      prevOutput = output;\r\n      net.propagate(0.95, 0, true, output);\r\n      perceptronInput.push(outputMaxId / inputSize);\r\n    });\r\n    const perceptronOutput = new Array(inputSize).fill(0);\r\n    perceptronOutput[\r\n      Math.floor((normalizedOutputData[id]?.normal || 0.5) * inputSize)\r\n    ] = 1;\r\n    logFunction('' + (id / normalizedInputData.length).toFixed(3) + '%');\r\n    // if (!perceptronInput.includes(1) || !perceptronOutput.includes(1)) {\r\n    //   logFunction({ perceptronOutput, perceptronInput });\r\n    //   throw new Error('create perceptron dataset');\r\n    // }\r\n    // logFunction(\r\n    //   JSON.stringify({\r\n    //     input: perceptronInput,\r\n    //     output: perceptronOutput,\r\n    //     ...record,\r\n    //   })\r\n    // );\r\n    return { ...record, input: perceptronInput, output: perceptronOutput };\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nfunction getMaxId(array) {\r\n  return array.reduce((prev, value, id) => {\r\n    return value > array[prev] ? id : prev;\r\n  }, 0);\r\n}\r\n\n\n//# sourceURL=webpack://text-prediction/./src/webWorker/getDataSet.mjs?");

/***/ }),

/***/ "./src/webWorker/init.mjs":
/*!********************************!*\
  !*** ./src/webWorker/init.mjs ***!
  \********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nlet prev = 2;\r\nMath.random = () => {\r\n  const x = Math.sin(prev) * 1000;\r\n  prev = x - Math.floor(x);\r\n  return prev;\r\n};\r\n\r\nMath.random.reset = () => {\r\n  prev = 2;\r\n  return Math;\r\n};\r\n\n\n//# sourceURL=webpack://text-prediction/./src/webWorker/init.mjs?");

/***/ }),

/***/ "./src/webWorker/worker.mjs":
/*!**********************************!*\
  !*** ./src/webWorker/worker.mjs ***!
  \**********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _MarketPricePredictionTest_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MarketPricePredictionTest.mjs */ \"./src/webWorker/MarketPricePredictionTest.mjs\");\n/* harmony import */ var _Workers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Workers.js */ \"./src/Workers.js\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config.mjs */ \"./src/webWorker/config.mjs\");\n\r\n\r\n\r\nconst logFunction = (...args) =>\r\n  postMessage({ action: _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.LOG, value: args });\r\nObject.assign(globalThis, { logFunction });\r\n\r\nonmessage = function (event) {\r\n  try {\r\n    // logFunction('aaabbb');\r\n    const { action, value, requestId } = event.data;\r\n    logFunction({ action, requestId });\r\n    switch (action) {\r\n      case _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.INITIALIZE: {\r\n        (0,_config_mjs__WEBPACK_IMPORTED_MODULE_2__.setHost)(value.host);\r\n        postMessage({\r\n          action,\r\n          value: { status: _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Statuses.OK },\r\n          requestId,\r\n        });\r\n        break;\r\n      }\r\n      case _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.RUN: {\r\n        logFunction('jest');\r\n        (0,_MarketPricePredictionTest_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(event.data);\r\n        break;\r\n      }\r\n      case _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.CREATE_LSTM_DATA_SET: {\r\n        (0,_MarketPricePredictionTest_mjs__WEBPACK_IMPORTED_MODULE_0__.createLstmDataSet)(event.data);\r\n        break;\r\n      }\r\n      case _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.CREATE_NEW_LSTM_NETWORK: {\r\n        (0,_MarketPricePredictionTest_mjs__WEBPACK_IMPORTED_MODULE_0__.createNewLstmNetwork)(event.data);\r\n        break;\r\n      }\r\n      case _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.LOAD_LSTM_NETWORK_FROM_JSON: {\r\n        (0,_MarketPricePredictionTest_mjs__WEBPACK_IMPORTED_MODULE_0__.loadLstmNetworkFromJson)(event.data);\r\n        break;\r\n      }\r\n      case _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.SET_INPUT_LAYER_SIZE: {\r\n        (0,_MarketPricePredictionTest_mjs__WEBPACK_IMPORTED_MODULE_0__.setInputLayerSize)(event.data);\r\n        break;\r\n      }\r\n      case _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.SET_HIDDEN_LAYER_SIZE: {\r\n        (0,_MarketPricePredictionTest_mjs__WEBPACK_IMPORTED_MODULE_0__.setHiddenLayerSize)(event.data);\r\n        break;\r\n      }\r\n      case _Workers_js__WEBPACK_IMPORTED_MODULE_1__.Actions.TEST: {\r\n        logFunction('jest');\r\n        (0,_MarketPricePredictionTest_mjs__WEBPACK_IMPORTED_MODULE_0__.test)(event.data);\r\n        break;\r\n      }\r\n      default: {\r\n        logFunction('Unknown action');\r\n      }\r\n    }\r\n    // postMessage('aaa');\r\n  } catch (e) {\r\n    postMessage({ error: e.message });\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack://text-prediction/./src/webWorker/worker.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/webWorker/worker.mjs");
/******/ 	
/******/ })()
;